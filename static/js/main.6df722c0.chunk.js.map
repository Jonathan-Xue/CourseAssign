{"version":3,"sources":["constants/actionTypes.js","reducers/authReducer.js","reducers/entryReducer.js","reducers/courseReducer.js","reducers/instructorReducer.js","reducers/matchReducer.js","reducers/index.js","firebase.js","actions/authActions.js","store.js","ProtectedRoute.jsx","containers/NavBar.jsx","requests/entries.js","containers/modals/NewEntryModal.jsx","containers/modals/DeleteEntryModal.jsx","actions/courseActions.js","containers/modals/NewCourseModal.jsx","containers/modals/UpdateCourseModal.jsx","containers/modals/DeleteCourseModal.jsx","actions/instructorActions.js","containers/modals/NewInstructorModal.jsx","containers/modals/UpdateInstructorModal.jsx","containers/modals/DeleteInstructorModal.jsx","components/CardList.jsx","containers/sampledata.js","actions/entryActions.js","containers/HomeView.jsx","containers/LoginView.jsx","AppRoutes.jsx","App.jsx","serviceWorker.js","index.js","assets/logo.svg","assets/background.jpg"],"names":["BASE_URL","initialState","isLoggingIn","isLoggingOut","isVerifying","loginError","logoutError","isAuthenticated","profile","state","action","type","payload","isGettingEntry","getEntryResp","getEntryError","isPostingEntry","postEntryResp","postEntryError","isDeletingEntry","deleteEntryResp","deleteEntryErr","deleteEntryError","paylod","isGettingCourse","getCourseResp","getCourseError","isPostingCourse","postCourseResp","postCourseError","isPuttingCourse","putCourseResp","putCourseError","isDeletingCourse","deleteCourseResp","deleteCourseErr","deleteCourseError","isGettingInstructor","getInstructorResp","getInstructorError","isPostingInstructor","postInstructorResp","postInstructorError","isPuttingInstructor","putInstructorResp","putInstructorError","isDeletingInstructor","deleteInstructorResp","deleteInstructorErr","deleteInstructorError","isMatchingCourses","matchCoursesResp","matchCoursesError","isMatchingInstructors","matchInstructorsResp","matchInstructorsError","createRootReducer","history","combineReducers","router","connectRouter","auth","authReducer","entryRequests","entryReducer","courseRequests","courseReducer","instructorRequests","instructorReducer","match","matchReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","loginSuccess","firestore","res","loginFailed","err","createBrowserHistory","basename","process","ProtectedRoute","Component","component","params","render","props","to","pathname","from","location","NavBar","signoutButtonClickHandler","event","dispatch","signOut","then","catch","logoutFailed","username","password","Navbar","bg","className","expand","sticky","variant","Brand","src","logo","alt","width","height","Toggle","aria-controls","Collapse","Nav","Text","this","email","substring","lastIndexOf","Item","Button","onClick","connect","store","createEntry","courseNo","courseName","year","term","primaryInstructor","aPlus","a","aMinus","bPlus","b","bMinus","cPlus","c","cMinus","dPlus","d","dMinus","f","body","crossDomain","axios","post","response","console","log","deleteEntry","delete","error","form","NewEntryModal","textInput","e","setState","target","name","value","trim","submit","entry","close","Modal","size","show","visibility","onHide","Header","closeButton","Title","Body","Form","Row","Group","as","Col","controlId","Control","required","onChange","placeholder","Alert","Footer","React","DeleteEntryModal","getCourses","Promise","resolve","reject","get","getCourseSuccess","data","getCourseFailed","courseDesc","NewCourseModal","postCourseSuccess","postCourseFailed","rows","UpdateCourseModal","handleNumberSelect","parseInt","handleNameSelect","put","putCourseSuccess","putCourseFailed","courseMap","courses","forEach","course","hasOwnProperty","push","custom","Object","keys","map","i","key","DeleteCourseModal","deleteCourseSuccess","deleteCourseFailed","getInstructors","getInstructorSuccess","getInstructorFailed","instructorName","researchInterests","NewInstructorModal","postInstructorSuccess","postInstructorFailed","instructorId","UpdateInstructorModal","JSON","parse","putInstructorSuccess","putInstructorFailed","instructors","instructor","stringify","DeleteInstructorModal","deleteInstructorSuccess","deleteInstructorFailed","CardList","OverlayTrigger","placement","overlay","Tooltip","filter","charAt","toUpperCase","slice","selection","Card","Subtitle","score","sampleCourses","sampleInstructors","sampleCoursesRanking","sampleInstructorsRanking","getEntries","getEntrySuccess","getEntryFailed","HomeView","refreshData","all","timer","setTimeout","openNewEntryModal","showNewEntryModal","closeNewEntryModal","openDeleteEntryModal","showDeleteEntryModal","closeDeleteEntryModal","openNewCourseModal","showNewCourseModal","closeNewCourseModal","openUpdateCourseModal","showUpdateCourseModal","closeUpdateCourseModal","openDeleteCourseModal","showDeleteCourseModal","closeDeleteCourseModal","openNewInstructorModal","showNewInstructorModal","closeNewInstructorModal","openUpdateInstructorModal","showUpdateInstructorModal","closeUpdateInstructorModal","openDeleteInstructorModal","showDeleteInstructorModal","closeDeleteInstructorModal","findEntries","doc","window","open","document","write","findCourses","findInstructors","handleFilter","handleDropdown","search","responseFilter","responseSelection","responseData","clearTimeout","Fragment","Accordion","defaultActiveKey","eventKey","ListGroup","md","InputGroup","Prepend","id","block","LoginView","signInButtonClickHandler","signInWithEmailAndPassword","user","googleSignInButtonClickHandler","signInWithPopup","registerButtonClickHandler","alert","background","exact","path","preloadedState","createStore","compose","applyMiddleware","routerMiddleware","thunk","logger","onAuthStateChanged","configureStore","App","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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AAuB,CAChC,CACIrI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,GACT,CACElI,SAAU,MACVC,WAAY,mBACZsE,WAAY,omBACZ2D,MAAO,IAIFI,GAA2B,CACpC,CACI5B,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4B,MAAO,GACT,CACExB,aAAc,IACdL,eAAgB,mBAChBC,kBAAmB,4CACnB4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","file":"static/js/main.6df722c0.chunk.js","sourcesContent":["export const SAMPLE_ACTION_TYPE = \"SAMPLE_ACTION_TYPE\";\nexport const BASE_URL = 'https://cs411-project-273718.uc.r.appspot.com/';\n\n// Auth Actions\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED = \"LOGOUT_FAILED\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\n// Entry Actions\nexport const GET_ENTRY_REQUEST = \"GET_ENTRY_REQUEST\";\nexport const GET_ENTRY_SUCCESS = \"GET_ENTRY_SUCCESS\";\nexport const GET_ENTRY_FAILED = \"GET_ENTRY_FAILED\";\n\nexport const POST_ENTRY_REQUEST = \"POST_ENTRY_REQUEST\";\nexport const POST_ENTRY_SUCCESS = \"POST_ENTRY_SUCCESS\";\nexport const POST_ENTRY_FAILED = \"POST_ENTRY_FAILED\";\n\nexport const DELETE_ENTRY_REQUEST = \"DELETE_ENTRY_REQUEST\";\nexport const DELETE_ENTRY_SUCCESS = \"DELETE_ENTRY_SUCCESS\";\nexport const DELETE_ENTRY_FAILED = \"DELETE_ENTRY_FAILED\";\n\n// Course Actions\nexport const GET_COURSE_REQUEST = \"GET_COURSE_REQUEST\";\nexport const GET_COURSE_SUCCESS = \"GET_COURSE_SUCCESS\";\nexport const GET_COURSE_FAILED = \"GET_COURSE_FAILED\";\n\nexport const POST_COURSE_REQUEST = \"POST_COURSE_REQUEST\";\nexport const POST_COURSE_SUCCESS = \"POST_COURSE_SUCCESS\";\nexport const POST_COURSE_FAILED = \"POST_COURSE_FAILED\";\n\nexport const PUT_COURSE_REQUEST = \"PUT_COURSE_REQUEST\";\nexport const PUT_COURSE_SUCCESS = \"PUT_COURSE_SUCCESS\";\nexport const PUT_COURSE_FAILED = \"PUT_COURSE_FAILED\";\n\nexport const DELETE_COURSE_REQUEST = \"DELETE_COURSE_REQUEST\";\nexport const DELETE_COURSE_SUCCESS = \"DELETE_COURSE_SUCCESS\";\nexport const DELETE_COURSE_FAILED = \"DELETE_COURSE_FAILED\";\n\n// Instructor Actions\nexport const GET_INSTRUCTOR_REQUEST = \"GET_INSTRUCTOR_REQUEST\";\nexport const GET_INSTRUCTOR_SUCCESS = \"GET_INSTRUCTOR_SUCCESS\";\nexport const GET_INSTRUCTOR_FAILED = \"GET_INSTRUCTOR_FAILED\";\n\nexport const POST_INSTRUCTOR_REQUEST = \"POST_INSTRUCTOR_REQUEST\";\nexport const POST_INSTRUCTOR_SUCCESS = \"POST_INSTRUCTOR_SUCCESS\";\nexport const POST_INSTRUCTOR_FAILED = \"POST_INSTRUCTOR_FAILED\";\n\nexport const PUT_INSTRUCTOR_REQUEST = \"PUT_INSTRUCTOR_REQUEST\";\nexport const PUT_INSTRUCTOR_SUCCESS = \"PUT_INSTRUCTOR_SUCCESS\";\nexport const PUT_INSTRUCTOR_FAILED = \"PUT_INSTRUCTOR_FAILED\";\n\nexport const DELETE_INSTRUCTOR_REQUEST = \"DELETE_INSTRUCTOR_REQUEST\";\nexport const DELETE_INSTRUCTOR_SUCCESS = \"DELETE_INSTRUCTOR_SUCCESS\";\nexport const DELETE_INSTRUCTOR_FAILED = \"DELETE_INSTRUCTOR_FAILED\";\n\n// Match Actions\nexport const MATCH_COURSES_REQUEST = \"MATCH_COURSES_REQUEST\";\nexport const MATCH_COURSES_SUCCESS = \"MATCH_COURSES_SUCCESS\";\nexport const MATCH_COURSES_FAILED = \"MATCH_COURSES_FAILED\";\n\nexport const MATCH_INSTRUCTORS_REQUEST = \"MATCH_INSTRUCTORS_REQUEST\";\nexport const MATCH_INSTRUCTORS_SUCCESS = \"MATCH_INSTRUCTORS_SUCCESS\";\nexport const MATCH_INSTRUCTORS_FAILED = \"MATCH_INSTRUCTORS_FAILED\";","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, VERIFY_REQUEST, VERIFY_SUCCESS } from '../constants/actionTypes';\n\nconst initialState = {\n    isLoggingIn: false,\n    isLoggingOut: false,\n    isVerifying: false,\n    loginError: null,\n    logoutError: null,\n    isAuthenticated: false,\n    \n    profile: {}\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoggingIn: true,\n                loginError: null,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: true,\n                profile: action.payload,\n            };\n        case LOGIN_FAILED:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: false,\n                loginError: action.payload,\n            };\n        case LOGOUT_REQUEST:\n            return {\n                ...state,\n                isLoggingOut: true,\n                logoutError: null,\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isLoggingOut: false,\n                isAuthenticated: false,\n                profile: {},\n            };\n        case LOGOUT_FAILED:\n            return {\n                ...state,\n                isLoggingOut: false,\n                logoutError: action.payload,\n            };\n        case VERIFY_REQUEST:\n            return {\n                ...state,\n                isVerifying: true,\n            };\n        case VERIFY_SUCCESS:\n            return {\n                ...state,\n                isVerifying: false,\n            };\n        default:\n            return state;\n    }\n};","import { GET_ENTRY_REQUEST, GET_ENTRY_SUCCESS, GET_ENTRY_FAILED, POST_ENTRY_REQUEST, POST_ENTRY_SUCCESS, POST_ENTRY_FAILED, DELETE_ENTRY_REQUEST, DELETE_ENTRY_SUCCESS, DELETE_ENTRY_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingEntry: false,\n\tgetEntryResp: null,\n\tgetEntryError: null,\n\n\tisPostingEntry: false,\n\tpostEntryResp: null,\n\tpostEntryError: null,\n\n\tisDeletingEntry: false,\n\tdeleteEntryResp: null,\n\tdeleteEntryErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_ENTRY_REQUEST:\n            return {\n                ...state,\n                isGettingEntry: true,\n                getEntryError: null,\n            };\n    \tcase GET_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isGettingEntry: false,\n                getEntryResp: action.payload,\n            };\n    \tcase GET_ENTRY_FAILED:\n            return {\n                ...state,\n                isGettingEntry: false,\n                getEntryError: action.payload,\n            };\n    \tcase POST_ENTRY_REQUEST:\n            return {\n                ...state,\n                isPostingEntry: true,\n                postEntryError: null,\n            };\n    \tcase POST_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isPostingEntry: false,\n                postEntryResp: action.payload,\n            };\n    \tcase POST_ENTRY_FAILED:\n            return {\n                ...state,\n                isPostingEntry: false,\n                postEntryError: action.payload,\n            };\n    \tcase DELETE_ENTRY_REQUEST:\n            return {\n                ...state,\n                isDeletingEntry: true,\n                deleteEntryError: null,\n            };\n    \tcase DELETE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isDeletingEntry: false,\n                deleteEntryResp: action.payload,\n            };\n    \tcase DELETE_ENTRY_FAILED: \n            return {\n                ...state,\n                isDeletingEntry: false,\n                deleteEntryError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { GET_COURSE_REQUEST, GET_COURSE_SUCCESS, GET_COURSE_FAILED, POST_COURSE_REQUEST, POST_COURSE_SUCCESS, POST_COURSE_FAILED, PUT_COURSE_REQUEST, PUT_COURSE_SUCCESS, PUT_COURSE_FAILED, DELETE_COURSE_REQUEST, DELETE_COURSE_SUCCESS, DELETE_COURSE_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingCourse: false,\n\tgetCourseResp: null,\n\tgetCourseError: null,\n\n\tisPostingCourse: false,\n\tpostCourseResp: null,\n\tpostCourseError: null,\n\n    isPuttingCourse: false,\n    putCourseResp: null,\n    putCourseError: null,\n\n\tisDeletingCourse: false,\n\tdeleteCourseResp: null,\n\tdeleteCourseErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_COURSE_REQUEST:\n            return {\n                ...state,\n                isGettingCourse: true,\n                getCourseError: null,\n            };\n    \tcase GET_COURSE_SUCCESS:\n            return {\n                ...state,\n                isGettingCourse: false,\n                getCourseResp: action.payload,\n            };\n    \tcase GET_COURSE_FAILED:\n            return {\n                ...state,\n                isGettingCourse: false,\n                getCourseError: action.payload,\n            };\n    \tcase POST_COURSE_REQUEST:\n            return {\n                ...state,\n                isPostingCourse: true,\n                postCourseError: null,\n            };\n    \tcase POST_COURSE_SUCCESS:\n            return {\n                ...state,\n                isPostingCourse: false,\n                postCourseResp: action.payload,\n            };\n    \tcase POST_COURSE_FAILED:\n            return {\n                ...state,\n                isPostingCourse: false,\n                postCourseError: action.payload,\n            };\n\n        case PUT_COURSE_REQUEST:\n            return {\n                ...state,\n                isPuttingCourse: true,\n                putCourseError: null,\n            };\n        case PUT_COURSE_SUCCESS:\n            return {\n                ...state,\n                isPuttingCourse: false,\n                putCourseResp: action.payload,\n            };\n        case PUT_COURSE_FAILED:\n            return {\n                ...state,\n                isPuttingCourse: false,\n                putCourseError: action.payload,\n            };\n    \tcase DELETE_COURSE_REQUEST:\n            return {\n                ...state,\n                isDeletingCourse: true,\n                deleteCourseError: null,\n            };\n    \tcase DELETE_COURSE_SUCCESS:\n            return {\n                ...state,\n                isDeletingCourse: false,\n                deleteCourseResp: action.payload,\n            };\n    \tcase DELETE_COURSE_FAILED: \n            return {\n                ...state,\n                isDeletingCourse: false,\n                deleteCourseError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { GET_INSTRUCTOR_REQUEST, GET_INSTRUCTOR_SUCCESS, GET_INSTRUCTOR_FAILED, POST_INSTRUCTOR_REQUEST, POST_INSTRUCTOR_SUCCESS, POST_INSTRUCTOR_FAILED, PUT_INSTRUCTOR_REQUEST, PUT_INSTRUCTOR_SUCCESS, PUT_INSTRUCTOR_FAILED, DELETE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_SUCCESS, DELETE_INSTRUCTOR_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingInstructor: false,\n\tgetInstructorResp: null,\n\tgetInstructorError: null,\n\n\tisPostingInstructor: false,\n\tpostInstructorResp: null,\n\tpostInstructorError: null,\n\n    isPuttingInstructor: false,\n    putInstructorResp: null,\n    putInstructorError: null,\n\n\tisDeletingInstructor: false,\n\tdeleteInstructorResp: null,\n\tdeleteInstructorErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isGettingInstructor: true,\n                getInstructorError: null,\n            };\n    \tcase GET_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isGettingInstructor: false,\n                getInstructorResp: action.payload,\n            };\n    \tcase GET_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isGettingInstructor: false,\n                getInstructorError: action.payload,\n            };\n    \tcase POST_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isPostingInstructor: true,\n                postInstructorError: null,\n            };\n    \tcase POST_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isPostingInstructor: false,\n                postInstructorResp: action.payload,\n            };\n    \tcase POST_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isPostingInstructor: false,\n                postInstructorError: action.payload,\n            };\n\n        case PUT_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isPuttingInstructor: true,\n                putInstructorError: null,\n            };\n        case PUT_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isPuttingInstructor: false,\n                putInstructorResp: action.payload,\n            };\n        case PUT_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isPuttingInstructor: false,\n                putInstructorError: action.payload,\n            };\n    \tcase DELETE_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isDeletingInstructor: true,\n                deleteInstructorError: null,\n            };\n    \tcase DELETE_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isDeletingInstructor: false,\n                deleteInstructorResp: action.payload,\n            };\n    \tcase DELETE_INSTRUCTOR_FAILED: \n            return {\n                ...state,\n                isDeletingInstructor: false,\n                deleteInstructorError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { MATCH_COURSES_REQUEST, MATCH_COURSES_SUCCESS, MATCH_COURSES_FAILED, MATCH_INSTRUCTORS_REQUEST, MATCH_INSTRUCTORS_SUCCESS, MATCH_INSTRUCTORS_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisMatchingCourses: false,\n\tmatchCoursesResp: null,\n\tmatchCoursesError: null,\n\n\tisMatchingInstructors: false,\n\tmatchInstructorsResp: null,\n\tmatchInstructorsError: null,\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase MATCH_COURSES_REQUEST:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatchingCourses: true,\n    \t\t\tmatchCoursesError: null,\n    \t\t}\n    \tcase MATCH_COURSES_SUCCESS:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatchingCourses: false,\n    \t\t\tmatchCoursesResp: action.payload,\n    \t\t}\n    \tcase MATCH_COURSES_FAILED:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatchingCourses: false,\n    \t\t\tmatchCoursesError: action.payload,\n    \t\t}\n    \tcase MATCH_INSTRUCTORS_REQUEST:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatchingInstructors: true,\n    \t\t\tmatchInstructorsError: null,\n    \t\t}\n    \tcase MATCH_INSTRUCTORS_SUCCESS:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatchingInstructors: false,\n    \t\t\tmatchInstructorsResp: action.payload,\n    \t\t}\n    \tcase MATCH_INSTRUCTORS_FAILED:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatchingInstructors: false,\n    \t\t\tmatchInstructorsError: action.payload,\n    \t\t}\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\n\nimport authReducer from './authReducer.js';\nimport entryReducer from './entryReducer.js';\nimport courseReducer from './courseReducer.js';\nimport instructorReducer from './instructorReducer.js';\nimport matchReducer from './matchReducer.js';\n\nconst createRootReducer = (history) => combineReducers({\n\trouter: connectRouter(history),\n    auth: authReducer,\n    entryRequests: entryReducer,\n    courseRequests: courseReducer,\n    instructorRequests: instructorReducer,\n    match: matchReducer,\n});\n\nexport default createRootReducer","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAvRxCrKYBVXXeSHunaqcvOcvsIv4HPLc8\",\n    authDomain: \"course-6ab40.firebaseapp.com\",\n    databaseURL: \"https://course-6ab40.firebaseio.com\",\n    projectId: \"course-6ab40\",\n    storageBucket: \"course-6ab40.appspot.com\",\n    messagingSenderId: \"346684960816\",\n    appId: \"1:346684960816:web:fdd8ed2590afc1f9bd3df5\",\n    measurementId: \"G-0M3YZSGD24\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const firestore = firebase.firestore();","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, VERIFY_REQUEST, VERIFY_SUCCESS } from '../constants/actionTypes';\nimport { auth, provider } from \"../firebase\";\n\n// Actions\nconst loginRequest = () => {\n    return {\n        type: LOGIN_REQUEST,\n    }\n}\n\nconst loginSuccess = (res) => {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: res,\n    }\n}\n\nconst loginFailed = (err) => {\n    return {\n        type: LOGIN_FAILED,\n        payload: err,\n    }\n}\n\nconst logoutRequest = () => {\n    return {\n        type: LOGOUT_REQUEST,\n    }\n}\n\nconst logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n    }\n}\n\nconst logoutFailed = (err) => {\n    return {\n        type: LOGOUT_FAILED,\n        payload: err,\n    }\n}\n\nconst verifyRequest = () => {\n    return {\n        type: VERIFY_REQUEST,\n    };\n}\n\nconst verifySuccess = () => {\n    return {\n        type: VERIFY_SUCCESS,\n    };\n}\n\n// Thunk\nexport const login = (email, password) => dispatch => {\n    dispatch(loginRequest());\n\n    auth.signInWithEmailAndPassword(email, password).then(res => {\n        dispatch(loginSuccess(res.user));\n    }).catch(err => {\n        dispatch(loginFailed(err));\n    });\n};\n\nexport const loginWithGoogle = () => dispatch => {\n    dispatch(loginRequest());\n\n    auth.signInWithPopup(provider).then(res => {\n        dispatch(loginSuccess(res.user));\n    }).catch(err => {\n        dispatch(loginFailed(err));\n    });\n}\n\nexport const logout = () => dispatch => {\n    dispatch(logoutRequest());\n\n    auth.signOut().then(() => {\n        dispatch(logoutSuccess());\n    }).catch(err => {\n        dispatch(logoutFailed(err));\n    });\n};\n\nexport const verifyAuth = () => dispatch => {\n    dispatch(verifyRequest());\n\n    auth.onAuthStateChanged(user => {\n        if (user) {\n            dispatch(loginSuccess(user));\n        }\n\n        dispatch(verifySuccess());\n    });\n};","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport createRootReducer from './reducers';\nimport { verifyAuth } from \"./actions/authActions\";\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nexport default function configureStore(preloadedState) {\n\tconst store = createStore(\n\t    createRootReducer(history),\n\t    preloadedState,\n\t    compose(\n\t    \tapplyMiddleware(\n\t    \t\trouterMiddleware(history),\n\t    \t\tthunk,\n\t    \t\tlogger\n\t    \t)\n\t    )\n\t)\n\n\tstore.dispatch(verifyAuth());\n\treturn store\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\n\nconst ProtectedRoute = ({\n    component: Component,\n    isAuthenticated,\n    isVerifying,\n    ...params\n}) => (\n    <Route\n        {...params}\n        render={ props =>\n            isVerifying \n                ? <div /> \n                : isAuthenticated \n                    ? <Component {...props} /> \n                    : <Redirect to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}/>\n        }\n    />\n);\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport { Button, Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport './NavBar.scss';\n\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n\nclass NavBar extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: '',\n            password: '',\n        };\n    }\n\n    // Button Handlers\n    signoutButtonClickHandler = (event) => {\n        this.props.dispatch(logout());\n    }\n\n    // Render\n    render() {\n        return (\n            <Navbar bg=\"dark\" className=\"navbar\" expand=\"sm\" sticky=\"top\" variant=\"dark\">\n                <Navbar.Brand>\n                    <img className=\"d-inline-block align-top\" src={logo} alt=\"\" width=\"30\" height=\"30\"/>\n                    Course Assign\n                </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\n                    </Nav>\n\n                    <Navbar.Text className=\"text\">\n                        Signed In As: <Link to=\"/profile\">{this.props.auth.profile.email.substring(0, this.props.auth.profile.email.lastIndexOf(\"@\"))}</Link>\n                    </Navbar.Text>\n                    <Nav.Item>\n                        <Button variant=\"danger\" onClick={this.signoutButtonClickHandler}>Logout</Button>\n                    </Nav.Item>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","import axios from 'axios';\n\n// BASE URL\nconst BASE_URL = 'http://127.0.0.1:5000/';\n\n// GET '/entries'\nexport const getEntries = async() => {\n\ttry {\n\t\tlet body = {\n\t\t\tcrossDomain: true\n\t\t};\n\n\t\tconst response = await axios.get(BASE_URL + '/entries', body);\n\t\treturn response;\n\t} catch(err) {\n\t\tconsole.log(err);\n\t}\n}\n\n\n// POST: '/entries'\nexport const createEntry = async(\n\tcourseNo,\n\tcourseName,\n\tyear,\n\tterm,\n\tprimaryInstructor,\n\taPlus,\n\ta,\n\taMinus,\n\tbPlus,\n\tb,\n\tbMinus,\n\tcPlus,\n\tc,\n\tcMinus,\n\tdPlus,\n\td,\n\tdMinus,\n\tf\n) => {\n\ttry {\n\t\tlet body = {\n\t\t\tcourseNo: courseNo,\n\t\t\tcourseName: courseName,\n\t\t\tyear: year,\n\t\t\tterm: term,\n\t\t\tprimaryInstructor: primaryInstructor,\n\t\t\taPlus: aPlus,\n\t\t\ta: a,\n\t\t\taMinus: aMinus,\n\t\t\tbPlus: bPlus,\n\t\t\tb: b,\n\t\t\tbMinus: bMinus,\n\t\t\tcPlus: cPlus,\n\t\t\tc: c,\n\t\t\tcMinus: cMinus,\n\t\t\tdPlus: dPlus,\n\t\t\td: d,\n\t\t\tdMinus: dMinus,\n\t\t\tf: f,\n\t\t\tcrossDomain: true\n\t\t}\n\n\t\tconst response = await axios.post(\n\t\t\tBASE_URL + '/entries', \n\t\t\tbody\n\t\t);\n\t\treturn response;\n\t} catch(err) {\n\t\tconsole.log(err);\n\t}\n}\n\n// PUT: '/entries/:courseNo/:courseName/:year/:term/:primaryInstructor'\nexport const updateEntry = async(\n\tcourseNo,\n\tcourseName,\n\tyear,\n\tterm,\n\tprimaryInstructor,\n\taPlus,\n\ta,\n\taMinus,\n\tbPlus,\n\tb,\n\tbMinus,\n\tcPlus,\n\tc,\n\tcMinus,\n\tdPlus,\n\td,\n\tdMinus,\n\tf\n) => {\n\ttry {\n\t\tlet body = {\n\t\t\taPlus: aPlus,\n\t\t\ta: a,\n\t\t\taMinus: aMinus,\n\t\t\tbPlus: bPlus,\n\t\t\tb: b,\n\t\t\tbMinus: bMinus,\n\t\t\tcPlus: cPlus,\n\t\t\tc: c,\n\t\t\tcMinus: cMinus,\n\t\t\tdPlus: dPlus,\n\t\t\td: d,\n\t\t\tdMinus: dMinus,\n\t\t\tf: f,\n\t\t\tcrossDomain: true\n\t\t}\n\n\t\tconst response = await axios.put(\n\t\t\tBASE_URL + '/entries/' + courseNo + '/' + courseName + '/' + year + '/' + term + '/' + primaryInstructor, \n\t\t\tbody\n\t\t);\n\t\treturn response;\n\t} catch(err) {\n\t\tconsole.log(err);\n\t}\n}\n\n// DELETE: '/entries/:courseNo/:courseName/:year/:term/:primaryInstructor'\nexport const deleteEntry = async(\n\tcourseNo,\n\tcourseName,\n\tyear,\n\tterm,\n\tprimaryInstructor\n) => {\n\ttry {\n\t\tlet body = {\n\t\t\tcrossDomain: true\n\t\t}\n\n\t\tconst response = await axios.delete(\n\t\t\tBASE_URL + '/entries/' + courseNo + '/' + courseName + '/' + year + '/' + term + '/' + primaryInstructor, \n\t\t\tbody\n\t\t);\n\t\treturn response;\n\t} catch(err) {\n\t\tconsole.log(err);\n\t}\n}","import React from 'react';\nimport { Alert, Button, Col, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { createEntry } from '../../requests/entries.js'\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        year: null,\n        term: null,\n        primaryInstructor: null,\n        aPlus: null,\n        a: null,\n        aMinus: null,\n        bPlus: null,\n        b: null,\n        bMinus: null,\n        cPlus: null,\n        c: null,\n        cMinus: null,\n        dPlus: null,\n        d: null,\n        dMinus: null,\n        f: null,\n    },\n}\n\nclass NewEntryModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Axios Request\n        createEntry(\n            this.state.form.courseNo,\n            this.state.form.courseName,\n            this.state.form.year,\n            this.state.form.term,\n            this.state.form.primaryInstructor,\n            this.state.form.aPlus,\n            this.state.form.a,\n            this.state.form.aMinus,\n            this.state.form.bPlus,\n            this.state.form.b,\n            this.state.form.bMinus,\n            this.state.form.cPlus,\n            this.state.form.c,\n            this.state.form.cMinus,\n            this.state.form.dPlus,\n            this.state.form.d,\n            this.state.form.dMinus,\n            this.state.form.f\n        ).then(res => {\n            // Close Form\n            this.props.close();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Entry</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"courseNo\">\n                                <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"courseName\">\n                                <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"year\">\n                                <Form.Control required name=\"year\" onChange={this.textInput} placeholder=\"Year\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"term\">\n                                <Form.Control required name=\"term\" onChange={this.textInput} placeholder=\"Term\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"primaryInstructor\">\n                            <Form.Control required name=\"primaryInstructor\" onChange={this.textInput} placeholder=\"Primary Instructor\"/>\n                        </Form.Group>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"aPlus\">\n                                <Form.Control required name=\"aPlus\" onChange={this.textInput} placeholder=\"A+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"a\">\n                                <Form.Control required name=\"a\" onChange={this.textInput} placeholder=\"A\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"aMinus\">\n                                <Form.Control required name=\"aMinus\" onChange={this.textInput} placeholder=\"A-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"bPlus\">\n                                <Form.Control required name=\"bPlus\" onChange={this.textInput} placeholder=\"B+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"b\">\n                                <Form.Control required name=\"b\" onChange={this.textInput} placeholder=\"B\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"bMinus\">\n                                <Form.Control required name=\"bMinus\" onChange={this.textInput} placeholder=\"B-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"cPlus\">\n                                <Form.Control required name=\"cPlus\" onChange={this.textInput} placeholder=\"C+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"c\">\n                                <Form.Control required name=\"c\" onChange={this.textInput} placeholder=\"C\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"cMinus\">\n                                <Form.Control required name=\"cMinus\" onChange={this.textInput} placeholder=\"C-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dPlus\">\n                                <Form.Control required name=\"dPlus\" onChange={this.textInput} placeholder=\"D+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"d\">\n                                <Form.Control required name=\"d\" onChange={this.textInput} placeholder=\"D\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dMinus\">\n                                <Form.Control required name=\"dMinus\" onChange={this.textInput} placeholder=\"D-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"f\">\n                                <Form.Control required name=\"f\" onChange={this.textInput} placeholder=\"F\"/>\n                            </Form.Group>\n                        </Form.Row>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Entry</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default NewEntryModal;","import React from 'react';\nimport { Alert, Button, Col, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { deleteEntry } from '../../requests/entries.js'\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        year: null,\n        term: null,\n        primaryInstructor: null,\n    },\n}\n\nclass DeleteEntryModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Axios Request\n        deleteEntry(\n            this.state.form.courseNo,\n            this.state.form.courseName,\n            this.state.form.year,\n            this.state.form.term,\n            this.state.form.primaryInstructor\n        ).then(res => {\n            // Close Form\n            this.props.close();\n        }).catch(err => {\n            console.log(err);\n        });\n    }    \n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Entry</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"courseNo\">\n                                <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"courseName\">\n                                <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"year\">\n                                <Form.Control required name=\"year\" onChange={this.textInput} placeholder=\"Year\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"term\">\n                                <Form.Control required name=\"term\" onChange={this.textInput} placeholder=\"Term\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"primaryInstructor\">\n                            <Form.Control required name=\"primaryInstructor\" onChange={this.textInput} placeholder=\"Primary Instructor\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Entry</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default DeleteEntryModal;","import { BASE_URL, GET_COURSE_REQUEST, GET_COURSE_SUCCESS, GET_COURSE_FAILED, POST_COURSE_REQUEST, POST_COURSE_SUCCESS, POST_COURSE_FAILED, PUT_COURSE_REQUEST, PUT_COURSE_SUCCESS, PUT_COURSE_FAILED, DELETE_COURSE_REQUEST, DELETE_COURSE_SUCCESS, DELETE_COURSE_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst getCourseRequest = () => {\n    return {\n        type: GET_COURSE_REQUEST,\n    }\n}\n\nconst getCourseSuccess = (res) => {\n    return {\n        type: GET_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getCourseFailed = (err) => {\n    return {\n        type: GET_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst postCourseRequest = () => {\n    return {\n        type: POST_COURSE_REQUEST,\n    }\n}\n\nconst postCourseSuccess = (res) => {\n    return {\n        type: POST_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postCourseFailed = (err) => {\n    return {\n        type: POST_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst putCourseRequest = () => {\n    return {\n        type: PUT_COURSE_REQUEST,\n    }\n}\n\nconst putCourseSuccess = (res) => {\n    return {\n        type: PUT_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst putCourseFailed = (err) => {\n    return {\n        type: PUT_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteCourseRequest = () => {\n    return {\n        type: DELETE_COURSE_REQUEST,\n    }\n}\n\nconst deleteCourseSuccess = (res) => {\n    return {\n        type: DELETE_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteCourseFailed = (err) => {\n    return {\n        type: DELETE_COURSE_FAILED,\n        payload: err,\n    }\n}\n\n\n// Thunk\n// GET: '/courses'\nexport const getCourses = () => dispatch => new Promise((resolve, reject) => {\n\tdispatch(getCourseRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tBASE_URL + '/courses', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(getCourseSuccess(res.data.data));\n\t\tresolve(res.data.data);\n\t}).catch(err => {\n\t\tdispatch(getCourseFailed(err));\n\t\treject(err);\n\t});\n})\n\n\n// POST: '/courses'\nexport const createCourse = (courseNo, courseName, courseDesc) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(postCourseRequest());\n\n\tlet body = {\n\t\tcourseNo: courseNo,\n\t\tcourseName: courseName,\n\t\tcourseDesc: courseDesc,\n\t\tcrossDomain: true\n\t}\n\n\taxios.post(\n\t\tBASE_URL + '/courses', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(postCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(postCourseFailed(err));\n\t\treject(err);\n\t});\n});\n\n// PUT: '/courses/:courseNo/:courseName'\nexport const updateCourse = (courseNo, courseName, courseDesc) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(putCourseRequest());\n\t\n\tlet body = {\n\t\tcourseDesc: courseDesc,\n\t\tcrossDomain: true\n\t}\n\n\taxios.put(\n\t\tBASE_URL + '/courses/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(putCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(putCourseFailed(err));\n\t\treject(err);\n\t});\n});\n\n// DELETE: '/courses/:courseNo/:courseName'\nexport const deleteCourse = (courseNo, courseName) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(deleteCourseRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t}\n\n\taxios.delete(\n\t\tBASE_URL + '/courses/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(deleteCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(deleteCourseFailed(err));\n\t\treject(err);\n\t});\n});","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, createCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        courseDesc: null,\n    },\n}\n\nclass NewCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(createCourse(this.state.form.courseNo, this.state.form.courseName, this.state.form.courseDesc)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New/Update Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"courseNo\">\n                            <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"courseDesc\">\n                            <Form.Control required as=\"textarea\" rows=\"5\" name=\"courseDesc\" onChange={this.textInput} placeholder=\"Course Description\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewCourseModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, updateCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        courseDesc: null,\n    },\n}\n\nclass UpdateCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(updateCourse(this.state.form.courseNo, this.state.form.courseName, this.state.form.courseDesc)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                       <Form.Group controlId=\"courseNo\">\n                            <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                <option value={null}>---course no---</option>\n                                { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---course name---</option>\n                                { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"courseDesc\">\n                            <Form.Control required as=\"textarea\" rows=\"5\" name=\"courseDesc\" onChange={this.textInput} placeholder=\"Course Description\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Update Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(UpdateCourseModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, deleteCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n    },\n}\n\nclass DeleteCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Axios Request\n        this.props.dispatch(deleteCourse(this.state.form.courseNo, this.state.form.courseName)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"courseNo\">\n                            <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                <option value={null}>---course no---</option>\n                                { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---course name---</option>\n                                { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteCourseModal);","import { BASE_URL, GET_INSTRUCTOR_REQUEST, GET_INSTRUCTOR_SUCCESS, GET_INSTRUCTOR_FAILED, POST_INSTRUCTOR_REQUEST, POST_INSTRUCTOR_SUCCESS, POST_INSTRUCTOR_FAILED, PUT_INSTRUCTOR_REQUEST, PUT_INSTRUCTOR_SUCCESS, PUT_INSTRUCTOR_FAILED, DELETE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_SUCCESS, DELETE_INSTRUCTOR_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst getInstructorRequest = () => {\n    return {\n        type: GET_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst getInstructorSuccess = (res) => {\n    return {\n        type: GET_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getInstructorFailed = (err) => {\n    return {\n        type: GET_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst postInstructorRequest = () => {\n    return {\n        type: POST_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst postInstructorSuccess = (res) => {\n    return {\n        type: POST_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postInstructorFailed = (err) => {\n    return {\n        type: POST_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst putInstructorRequest = () => {\n    return {\n        type: PUT_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst putInstructorSuccess = (res) => {\n    return {\n        type: PUT_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst putInstructorFailed = (err) => {\n    return {\n        type: PUT_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteInstructorRequest = () => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst deleteInstructorSuccess = (res) => {\n    return {\n        type: DELETE_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteInstructorFailed = (err) => {\n    return {\n        type: DELETE_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/instructors'\nexport const getInstructors = () => dispatch => new Promise((resolve, reject) => {\n    dispatch(getInstructorRequest());\n\n    let body = {\n        crossDomain: true\n    };\n\n    axios.get(\n        BASE_URL + '/instructors', \n        body\n    ).then(res => {\n        dispatch(getInstructorSuccess(res.data.data));\n        resolve(res.data.data);\n    }).catch(err => {\n        dispatch(getInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// POST: '/instructors'\nexport const createInstructor = (instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(postInstructorRequest());\n\n    let body = {\n        instructorName: instructorName,\n        researchInterests: researchInterests,\n        crossDomain: true\n    }\n\n    axios.post(\n        BASE_URL + '/instructors', \n        body\n    ).then(res => {\n        dispatch(postInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(postInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// PUT: '/instructors/:instructorId'\nexport const updateInstructor = (instructorId, instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(putInstructorRequest());\n    \n    let body = {\n        instructorName: instructorName,\n        researchInterests: researchInterests,\n        crossDomain: true\n    }\n\n    axios.put(\n        BASE_URL + '/instructors/' + instructorId,\n        body\n    ).then(res => {\n        dispatch(putInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(putInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// DELETE: '/courses/:courseNo/:courseName'\nexport const deleteInstructor = (instructorId, instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(deleteInstructorRequest());\n\n    let body = {\n        crossDomain: true\n    }\n\n    axios.delete(\n        BASE_URL + '/instructors/' + instructorId, \n        body\n    ).then(res => {\n        dispatch(deleteInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(deleteInstructorFailed(err));\n        reject(err);\n    });\n});","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, createInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorName: null,\n        researchInterests: null,\n    },\n}\n\nclass NewInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(createInstructor(this.state.form.instructorName, this.state.form.researchInterests)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control required name=\"instructorName\" onChange={this.textInput} placeholder=\"Instructor Name\"/>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"researchInterests\">\n                            <Form.Control required name=\"researchInterests\" onChange={this.textInput} placeholder=\"Research Interests\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewInstructorModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, updateInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorId: null,\n        instructorName: null,\n        researchInterests: null,\n    },\n}\n\nclass UpdateInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                instructorId: JSON.parse(e.target.value).instructorId,\n                instructorName: JSON.parse(e.target.value).instructorName,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(updateInstructor(this.state.form.instructorId, this.state.form.instructorName, this.state.form.researchInterests)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---instructor name---</option>\n                                { this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"researchInterests\">\n                            <Form.Control required name=\"researchInterests\" onChange={this.textInput} placeholder=\"Research Interests\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Update Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(UpdateInstructorModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, deleteInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorId: null,\n    },\n}\n\nclass DeleteInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Select\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                instructorId: JSON.parse(e.target.value).instructorId,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(deleteInstructor(this.state.form.instructorId)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---instructor name---</option>\n                                { this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteInstructorModal);","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport './CardList.scss';\n\nconst CardList = (props) => {\n    return (\n        <OverlayTrigger placement=\"left\" overlay={\n            <Tooltip>\n                Filter: {props.filter ? props.filter.charAt(0).toUpperCase() + props.filter.slice(1) : \"Null\"}<br/>Selection: {props.selection ? props.selection : \"Null\"}\n            </Tooltip>\n        }>\n            <div className=\"card-list\">\n                { props.filter === \"instructor\"\n                    ? props.data.map((course, i) => \n                        <Card key={course.courseName + i}>\n                            <Card.Title>CS{course.courseNo}: {course.courseName}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">Relevancy Score: {course.score}</Card.Subtitle>\n                            <Card.Text>{course.courseDesc}</Card.Text>\n                        </Card>\n                    ): props.filter === \"course\"\n                            ? props.data.map((instructor, i) => \n                                <Card key={instructor.instructorId + i}>\n                                    <Card.Title>{instructor.instructorName}</Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">Relevancy Score: {instructor.score}</Card.Subtitle>\n                                    <Card.Text>{instructor.researchInterests}</Card.Text>\n                                </Card>\n                            ): null\n\n                }\n            </div>\n        </OverlayTrigger>\n    );\n}\n\nexport default CardList;","export const sampleCourses = [\"123\", \"124\", \"125\", \"126\", \"123\", \"124\", \"125\", \"126\",\"123\", \"124\", \"125\", \"126\",\"123\", \"124\", \"125\", \"126\",\"123\", \"124\", \"125\", \"126\"]\nexport const sampleInstructors = [\"Lawrence Angrave\", \"Abdu Alawini\", \"Jose Martin\", \"Heather Zikes\",\"Lawrence Angrave\", \"Abdu Alawini\", \"Jose Martin\", \"Heather Zikes\",\"Lawrence Angrave\", \"Abdu Alawini\", \"Jose Martin\", \"Heather Zikes\",\"Lawrence Angrave\", \"Abdu Alawini\", \"Jose Martin\", \"Heather Zikes\",\"Lawrence Angrave\", \"Abdu Alawini\", \"Jose Martin\", \"Heather Zikes\",]\n\n\nexport const sampleCoursesRanking = [\n    {\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },{\n        courseNo: \"126\", \n        courseName: \"Database Systems\", \n        courseDesc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean neque nulla, fermentum pulvinar felis eu, imperdiet rhoncus nunc. Vivamus lacus nisi, dignissim sed ipsum id, sollicitudin varius leo. Praesent sed venenatis eros. Sed tempor libero et eros congue, non pulvinar libero euismod. Donec scelerisque, nisl non interdum pulvinar, sem urna gravida purus, at eleifend elit mauris vel nisi. Sed ut molestie libero. Aliquam sed eros a lorem tincidunt bibendum at sed ligula. Maecenas vulputate, quam ut finibus scelerisque, dolor elit porttitor arcu, in ullamcorper lacus sem in diam. Suspendisse potenti.\",\n        score: 2\n    },\n]\n\nexport const sampleInstructorsRanking = [\n    {\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },{\n        instructorId: \"1\", \n        instructorName: \"Lawrence Angrave\", \n        researchInterests: \"Quantum Computing, Artifical Intelligence\",\n        score: 1,\n    },\n]","import { BASE_URL, GET_ENTRY_REQUEST, GET_ENTRY_SUCCESS, GET_ENTRY_FAILED, POST_ENTRY_REQUEST, POST_ENTRY_SUCCESS, POST_ENTRY_FAILED, DELETE_ENTRY_REQUEST, DELETE_ENTRY_SUCCESS, DELETE_ENTRY_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst getEntryRequest = () => {\n    return {\n        type: GET_ENTRY_REQUEST,\n    }\n}\n\nconst getEntrySuccess = (res) => {\n    return {\n        type: GET_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getEntryFailed = (err) => {\n    return {\n        type: GET_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\nconst postEntryRequest = () => {\n    return {\n        type: POST_ENTRY_REQUEST,\n    }\n}\n\nconst postEntrySuccess = (res) => {\n    return {\n        type: POST_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postEntryFailed = (err) => {\n    return {\n        type: POST_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteEntryRequest = () => {\n    return {\n        type: DELETE_ENTRY_REQUEST,\n    }\n}\n\nconst deleteEntrySuccess = (res) => {\n    return {\n        type: DELETE_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteEntryFailed = (err) => {\n    return {\n        type: DELETE_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/courses'\nexport const getEntries = () => dispatch => new Promise((resolve, reject) => {\n\tdispatch(getEntryRequest());\n\n\tlet body = { \n\t\tcrossDomain: true \n\t};\n\n\taxios.get(\n\t\tBASE_URL + '/entries', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(getEntrySuccess(res.data.data));\n\t\tresolve(res.data.data);\n\t}).catch(err => {\n\t\tdispatch(getEntryFailed(err));\n\t\treject(err);\n\t});\n});\n\n// POST: '/entries'\nexport const createEntry = (courseNo, courseName, year, term, primaryInstructor, aPlus, a, aMinus, bPlus, b, bMinus, cPlus, c, cMinus, dPlus, d, dMinus, f) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(postEntryRequest());\n\n\tlet body = {\n\t\tcourseNo: courseNo,\n\t\tcourseName: courseName,\n\t\tyear: year,\n\t\tterm: term,\n\t\tprimaryInstructor: primaryInstructor,\n\t\taPlus: aPlus,\n\t\ta: a,\n\t\taMinus: aMinus,\n\t\tbPlus: bPlus,\n\t\tb: b,\n\t\tbMinus: bMinus,\n\t\tcPlus: cPlus,\n\t\tc: c,\n\t\tcMinus: cMinus,\n\t\tdPlus: dPlus,\n\t\td: d,\n\t\tdMinus: dMinus,\n\t\tf: f,\n\t\tcrossDomain: true\n\t};\n\n\taxios.post(\n\t\tBASE_URL + '/entries', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(postEntrySuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(postEntryFailed(err));\n\t\treject(err);\n\t});\n});\n\n// DELETE: '/entries/:courseNo/:courseName/:year/:term/:primaryInstructor'\nexport const deleteEntry = ( courseNo, courseName, year, term, primaryInstructor) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(deleteEntryRequest());\n\t\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.delete(\n\t\tBASE_URL + '/entries/' + courseNo + '/' + courseName + '/' + year + '/' + term + '/' + primaryInstructor, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(deleteEntrySuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(deleteEntryFailed(err));\n\t\treject(err);\n\t})\n});","import React from 'react';\nimport { Accordion, Card, Button, Col, Form, InputGroup, ListGroup } from 'react-bootstrap';\nimport NavBar from './NavBar';\nimport NewEntryModal from './modals/NewEntryModal';\nimport DeleteEntryModal from './modals/DeleteEntryModal';\nimport NewCourseModal from './modals/NewCourseModal';\nimport UpdateCourseModal from './modals/UpdateCourseModal';\nimport DeleteCourseModal from './modals/DeleteCourseModal';\nimport NewInstructorModal from './modals/NewInstructorModal';\nimport UpdateInstructorModal from './modals/UpdateInstructorModal';\nimport DeleteInstructorModal from './modals/DeleteInstructorModal';\nimport CardList from '../components/CardList';\nimport './HomeView.scss';\n\nimport { sampleCourses, sampleInstructors, sampleCoursesRanking, sampleInstructorsRanking } from './sampledata.js';\n\nimport { connect } from 'react-redux';\nimport { getEntries, createEntry, deleteEntry } from '../actions/entryActions';\nimport { getCourses, createCourse, updateCourse, deleteCourse } from '../actions/courseActions';\nimport { getInstructors, createInstructor, updateInstructor, deleteInstructor } from '../actions/instructorActions';\nimport { matchInstructorsToCourse, matchCoursesToInstructor } from '../actions/matchActions';\n\nclass HomeView extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            showNewEntryModal: false,\n            showDeleteEntryModal: false,\n\n            showNewCourseModal: false,\n            showUpdateCourseModal: false,\n            showDeleteCourseModal: false,\n\n            showNewInstructorModal: false,\n            showUpdateInstructorModal: false,\n            showDeleteInstructorModal: false,\n\n            filter: null,\n            selection: null,\n\n            responseFilter: null,\n            responseSelection: null,\n            responseData: [],\n\n            data: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed imperdiet nunc vitae nisl ullamcorper volutpat. Aliquam in augue vitae felis pretium ornare quis non velit. Morbi aliquet ipsum convallis faucibus luctus. In scelerisque risus non enim consectetur, vel tincidunt eros tempor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque elementum lobortis rhoncus. Nullam sagittis pretium volutpat. Cras id tristique lacus. Cras arcu nisi, scelerisque commodo cursus sed, faucibus a ligula. Morbi iaculis nulla id fringilla laoreet. Praesent ornare tortor quis risus ullamcorper luctus. Proin viverra pulvinar tempor. Morbi at iaculis mi.\",\n        };\n    }\n\n    // Lifecycle Methods\n    componentDidMount() {\n        console.log(\"\\n\\n\\n\\n\\nMount\\n\\n\\n\\n\\n\");\n        this.refreshData()\n    }\n    \n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    // Refresh Data Every Sixty Seconds\n    refreshData = () => {\n        Promise.all([\n            this.props.dispatch(getEntries()),\n            this.props.dispatch(getCourses()),\n            this.props.dispatch(getInstructors())\n        ]).then(res => {\n            this.timer = setTimeout(this.refreshData, 60000);\n        }).catch(err => {});\n    }\n\n    // Modals\n    openNewEntryModal = () => { this.setState({ showNewEntryModal: true }); };\n    closeNewEntryModal = () => { this.setState({ showNewEntryModal: false }); };\n\n    openDeleteEntryModal = () => { this.setState({ showDeleteEntryModal: true }); };\n    closeDeleteEntryModal = () => { this.setState({ showDeleteEntryModal: false }); };\n\n    openNewCourseModal = () => { this.setState({ showNewCourseModal: true }); };\n    closeNewCourseModal = () => { this.setState({ showNewCourseModal: false }); };\n\n    openUpdateCourseModal = () => { this.setState({ showUpdateCourseModal: true }); };\n    closeUpdateCourseModal = () => { this.setState({ showUpdateCourseModal: false }); };\n\n    openDeleteCourseModal = () => { this.setState({ showDeleteCourseModal: true }); };\n    closeDeleteCourseModal = () => { this.setState({ showDeleteCourseModal: false }); };\n\n    openNewInstructorModal = () => { this.setState({ showNewInstructorModal: true }); };\n    closeNewInstructorModal = () => { this.setState({ showNewInstructorModal: false }); };\n\n    openUpdateInstructorModal = () => { this.setState({ showUpdateInstructorModal: true }); };\n    closeUpdateInstructorModal = () => { this.setState({ showUpdateInstructorModal: false }); };\n\n    openDeleteInstructorModal = () => { this.setState({ showDeleteInstructorModal: true }); };\n    closeDeleteInstructorModal = () => { this.setState({ showDeleteInstructorModal: false }); };\n\n    // Open Current Version\n    findEntries = () => {\n        this.props.dispatch(getEntries()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {});\n    }\n\n    findCourses = () => {\n        this.props.dispatch(getCourses()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {});\n    }\n\n    findInstructors = () => {\n        this.props.dispatch(getInstructors()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {});\n    }\n\n    // Select Menu\n    handleFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n            selection: null,\n        })\n    }\n\n    handleDropdown = (e) => {\n        this.setState({\n            selection: e.target.value\n        })\n    }\n\n    search = (e) => {\n        // TODO: API\n        if (this.state.filter === \"instructor\") {\n            this.setState({\n                responseFilter: this.state.filter,\n                responseSelection: this.state.selection,\n                responseData: sampleCoursesRanking\n            })\n        } else if (this.state.filter === \"course\") {\n            this.setState({\n                responseFilter: this.state.filter,\n                responseSelection: this.state.selection,\n                responseData: sampleInstructorsRanking\n            })\n        } else {\n            this.setState({\n                responseFilter: null,\n                responseSelection: null,\n                responseData: []\n            })\n        }\n    }\n\n    // Render\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar history={this.props.history}/>\n                <div className=\"home-screen\">\n                    <div className=\"left\">\n                        <NewEntryModal visibility={this.state.showNewEntryModal} close={this.closeNewEntryModal}/>\n                        <DeleteEntryModal visibility={this.state.showDeleteEntryModal} close={this.closeDeleteEntryModal}/>\n                        <NewCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showNewCourseModal} close={this.closeNewCourseModal}/>\n                        <UpdateCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showUpdateCourseModal} close={this.closeUpdateCourseModal}/>\n                        <DeleteCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showDeleteCourseModal} close={this.closeDeleteCourseModal}/>\n                        <NewInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showNewInstructorModal} close={this.closeNewInstructorModal}/>\n                        <UpdateInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showUpdateInstructorModal} close={this.closeUpdateInstructorModal}/>\n                        <DeleteInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showDeleteInstructorModal} close={this.closeDeleteInstructorModal}/>\n\n                        <Accordion defaultActiveKey=\"-1\">\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <span>Entry Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewEntryModal}>New Entry</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteEntryModal}>Delete Entry</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                    <span>Course Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewCourseModal}>New Course</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openUpdateCourseModal}>Update Course</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteCourseModal}>Delete Course</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                    <span>Instructor Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"2\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewInstructorModal}>New Instructor</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openUpdateInstructorModal}>Update Instructor</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteInstructorModal}>Delete Instructor</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                    <span>Dataset Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"3\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findEntries}>Find Entries</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findCourses}>Find Courses</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findInstructors}>Find Instructors</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"content\">\n                            <Form>\n                                <Form.Row>\n                                    <Form.Group as={Col} md=\"3\" controlId=\"\">\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text id=\"inputGroupPrepend\">Filter:</InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control as=\"select\" onChange={this.handleFilter} custom>\n                                                <option value={null}></option>\n                                                <option value=\"instructor\">Instructor</option>\n                                                <option value=\"course\">Course</option>\n                                            </Form.Control>\n                                        </InputGroup>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} md=\"7\" controlId=\"\">\n                                        <Form.Control as=\"select\" onChange={this.handleDropdown} custom>\n                                            <option value={null}></option>\n                                            { this.state.filter === \"instructor\"\n                                                ? sampleInstructors.map((instructor, i) => <option key={instructor + i} value={instructor}>{instructor}</option>)\n                                                : this.state.filter === \"course\"\n                                                    ? sampleCourses.map((course, i) => <option key={course + i} value={course}>{course}</option>)\n                                                    : null\n                                            }\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} md=\"2\" controlId=\"\">\n                                        <Button block onClick={this.search} variant=\"light\">Search</Button>\n                                    </Form.Group>\n                                </Form.Row>\n                            </Form>\n\n                            <CardList filter={this.state.responseFilter} selection={this.state.responseSelection} data={this.state.responseData}/>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    };\n};\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n        entryRequests: store.entryRequests,\n        courseRequests: store.courseRequests,\n        instructorRequests: store.instructorRequests,\n        match: store.match,\n    }\n}\n\nexport default connect(mapStateToProps)(HomeView);","import React, { Component } from 'react';\nimport { Redirect } from \"react-router\";\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport background from '../assets/background.jpg';\nimport './LoginView.scss';\n\nimport { connect } from 'react-redux';\nimport { login, loginWithGoogle } from '../actions/authActions';\n\nclass LoginView extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            ...this.state,\n            [e.target.name]: e.target.value.trim(),\n        });\n    }\n\n    // Button Handlers\n    signInButtonClickHandler = (e) => {\n        this.props.dispatch(login(this.state.email, this.state.password))\n    }\n\n    googleSignInButtonClickHandler = (e) => {\n        this.props.dispatch(loginWithGoogle());\n    }\n\n    registerButtonClickHandler = (e) => {\n        // TODO:\n        alert(\"Registration is currently disabled. Please sign-in through Google.\")\n    }\n\n    // Render\n    render() {\n        if (this.props.auth.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        } else { \n            return (\n                <div className=\"login\">\n                    <div className=\"left\">\n                        <img className=\"background\" alt='' src={background} />\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"header\">\n                            <h1 className=\"brand\">Course Assign</h1>\n                        </div>\n\n                        <Form className=\"form\">\n                            { this.props.auth.loginError && <Alert variant=\"danger\">Invalid email/password combination!</Alert> }\n                            \n                            <Form.Group controlId=\"email\">\n                                <Form.Control required name=\"email\" onChange={this.textInput} placeholder='Email'/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"password\">\n                                <Form.Control type=\"password\" name=\"password\" onChange={this.textInput} placeholder='Password'/>\n                            </Form.Group>\n\n                            <Button block className=\"signin-button\" onClick={this.signInButtonClickHandler}>Sign In</Button>\n\n                            <Button block className=\"signin-button\" onClick={this.googleSignInButtonClickHandler}>Sign In With Google</Button>\n\n                            <Button block className=\"register-button\" onClick={this.registerButtonClickHandler}>Register</Button>\n                        </Form>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(LoginView);","import React from 'react';\nimport { Route, Switch } from 'react-router'\nimport { connect } from 'react-redux';\nimport './App.scss';\n\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport HomeView from './containers/HomeView';\nimport LoginView from './containers/LoginView';\n\nfunction AppRoutes(props) {\n    return (\n        <Switch>\n            <Route exact path=\"/login\" component={LoginView} />\n            <ProtectedRoute exact path=\"/\" component={HomeView} isAuthenticated={props.isAuthenticated} isVerifying={props.isVerifying}/>\n        </Switch>\n    );\n};\n\nfunction mapStateToProps(store) {\n    return {\n        isAuthenticated: store.auth.isAuthenticated,\n        isVerifying: store.auth.isVerifying,\n    };\n};\n\nexport default connect(mapStateToProps)(AppRoutes);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store';\nimport './App.scss';\n\nimport AppRoutes from \"./AppRoutes\";\n\nconst store = configureStore();\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <AppRoutes/>\n            </ConnectedRouter>\n        </Provider>\n    );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.23c73952.jpg\";"],"sourceRoot":""}