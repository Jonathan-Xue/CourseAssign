{"version":3,"sources":["reducers/authReducer.js","constants/actionTypes.js","reducers/entryReducer.js","reducers/courseReducer.js","reducers/instructorReducer.js","reducers/matchReducer.js","reducers/index.js","firebase.js","actions/authActions.js","store.js","ProtectedRoute.jsx","containers/NavBar.jsx","constants/config.js","actions/entryActions.js","containers/modals/NewEntryModal.jsx","containers/modals/DeleteEntryModal.jsx","actions/courseActions.js","containers/modals/NewCourseModal.jsx","containers/modals/UpdateCourseModal.jsx","containers/modals/DeleteCourseModal.jsx","actions/instructorActions.js","containers/modals/NewInstructorModal.jsx","containers/modals/UpdateInstructorModal.jsx","containers/modals/DeleteInstructorModal.jsx","components/LoadingButton.jsx","components/SearchBar.jsx","components/LoadingSpinner.jsx","components/CardList.jsx","actions/matchActions.js","containers/HomeView.jsx","containers/LoginView.jsx","AppRoutes.jsx","App.jsx","serviceWorker.js","index.js","assets/logo.svg","assets/background.jpg"],"names":["initialState","isLoggingIn","isLoggingOut","isVerifying","loginError","logoutError","isAuthenticated","profile","state","action","type","payload","isGettingEntry","getEntryResp","getEntryError","isPostingEntry","postEntryResp","postEntryError","isDeletingEntry","deleteEntryResp","deleteEntryErr","deleteEntryError","paylod","isGettingCourse","getCourseResp","getCourseError","isPostingCourse","postCourseResp","postCourseError","isPuttingCourse","putCourseResp","putCourseError","isDeletingCourse","deleteCourseResp","deleteCourseErr","deleteCourseError","isGettingInstructor","getInstructorResp","getInstructorError","isPostingInstructor","postInstructorResp","postInstructorError","isPuttingInstructor","putInstructorResp","putInstructorError","isDeletingInstructor","deleteInstructorResp","deleteInstructorErr","deleteInstructorError","isMatching","matchResp","matchError","createRootReducer","history","combineReducers","router","connectRouter","auth","authReducer","entryRequests","entryReducer","courseRequests","courseReducer","instructorRequests","instructorReducer","match","matchReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","loginSuccess","firestore","res","loginFailed","err","logger","createLogger","collapsed","createBrowserHistory","basename","process","ProtectedRoute","Component","component","params","render","props","to","pathname","from","location","NavBar","signoutButtonClickHandler","event","dispatch","signOut","then","catch","logoutFailed","username","password","Navbar","bg","className","expand","sticky","variant","Brand","src","logo","alt","width","height","Toggle","aria-controls","Collapse","Nav","Text","this","email","substring","lastIndexOf","Item","Button","onClick","connect","store","config","API_URL","getEntries","Promise","resolve","reject","axios","get","crossDomain","getEntrySuccess","data","getEntryFailed","error","form","courseNo","courseName","year","term","primaryInstructor","aPlus","a","aMinus","bPlus","b","bMinus","cPlus","c","cMinus","dPlus","d","dMinus","f","NewEntryModal","textInput","e","setState","target","name","value","trim","handleNumberSelect","parseInt","handleNameSelect","handleYearSelect","handleTermSelect","handleInstructorSelect","submit","entry","body","post","postEntrySuccess","postEntryFailed","close","console","log","courseMap","courses","forEach","course","hasOwnProperty","push","instructorsMap","instructors","instructor","instructorId","instructorName","years","terms","Modal","size","show","visibility","onHide","Header","closeButton","Title","Body","Form","Row","Group","as","Col","controlId","Control","onChange","custom","Object","keys","map","i","key","entries","required","placeholder","Alert","Footer","React","DeleteEntryModal","delete","deleteEntrySuccess","deleteEntryFailed","Set","add","getCourses","getCourseSuccess","getCourseFailed","courseDesc","NewCourseModal","postCourseSuccess","postCourseFailed","rows","UpdateCourseModal","put","putCourseSuccess","putCourseFailed","DeleteCourseModal","deleteCourseSuccess","deleteCourseFailed","getInstructors","getInstructorSuccess","getInstructorFailed","researchInterests","NewInstructorModal","postInstructorSuccess","postInstructorFailed","UpdateInstructorModal","JSON","parse","putInstructorSuccess","putInstructorFailed","stringify","DeleteInstructorModal","deleteInstructorSuccess","deleteInstructorFailed","LoadingButton","disabled","Spinner","animation","role","aria-hidden","SearchBar","handleFilter","filter","selection","handleDropdown","search","md","InputGroup","Prepend","id","isLoading","block","LoadingSpinner","CardList","OverlayTrigger","placement","overlay","Tooltip","charAt","toUpperCase","slice","Card","Subtitle","score","toFixed","matchSuccess","matchFailed","HomeView","refreshData","all","timer","setTimeout","openNewEntryModal","showNewEntryModal","closeNewEntryModal","openDeleteEntryModal","showDeleteEntryModal","closeDeleteEntryModal","openNewCourseModal","showNewCourseModal","closeNewCourseModal","openUpdateCourseModal","showUpdateCourseModal","closeUpdateCourseModal","openDeleteCourseModal","showDeleteCourseModal","closeDeleteCourseModal","openNewInstructorModal","showNewInstructorModal","closeNewInstructorModal","openUpdateInstructorModal","showUpdateInstructorModal","closeUpdateInstructorModal","openDeleteInstructorModal","showDeleteInstructorModal","closeDeleteInstructorModal","findEntries","doc","window","open","document","write","findCourses","findInstructors","responseFilter","responseSelection","clearTimeout","Fragment","Accordion","defaultActiveKey","eventKey","ListGroup","LoginView","signInButtonClickHandler","signInWithEmailAndPassword","user","googleSignInButtonClickHandler","signInWithPopup","registerButtonClickHandler","alert","background","exact","path","preloadedState","createStore","compose","applyMiddleware","routerMiddleware","thunk","onAuthStateChanged","configureStore","App","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.8990d6e7.chunk.js","sourcesContent":["import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, VERIFY_REQUEST, VERIFY_SUCCESS } from '../constants/actionTypes';\n\nconst initialState = {\n    isLoggingIn: false,\n    isLoggingOut: false,\n    isVerifying: false,\n    loginError: null,\n    logoutError: null,\n    isAuthenticated: false,\n    \n    profile: {}\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoggingIn: true,\n                loginError: null,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: true,\n                profile: action.payload,\n            };\n        case LOGIN_FAILED:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: false,\n                loginError: action.payload,\n            };\n        case LOGOUT_REQUEST:\n            return {\n                ...state,\n                isLoggingOut: true,\n                logoutError: null,\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isLoggingOut: false,\n                isAuthenticated: false,\n                profile: {},\n            };\n        case LOGOUT_FAILED:\n            return {\n                ...state,\n                isLoggingOut: false,\n                logoutError: action.payload,\n            };\n        case VERIFY_REQUEST:\n            return {\n                ...state,\n                isVerifying: true,\n            };\n        case VERIFY_SUCCESS:\n            return {\n                ...state,\n                isVerifying: false,\n            };\n        default:\n            return state;\n    }\n};","// Auth Actions\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED = \"LOGOUT_FAILED\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\n// Entry Actions\nexport const GET_ENTRY_REQUEST = \"GET_ENTRY_REQUEST\";\nexport const GET_ENTRY_SUCCESS = \"GET_ENTRY_SUCCESS\";\nexport const GET_ENTRY_FAILED = \"GET_ENTRY_FAILED\";\n\nexport const POST_ENTRY_REQUEST = \"POST_ENTRY_REQUEST\";\nexport const POST_ENTRY_SUCCESS = \"POST_ENTRY_SUCCESS\";\nexport const POST_ENTRY_FAILED = \"POST_ENTRY_FAILED\";\n\nexport const DELETE_ENTRY_REQUEST = \"DELETE_ENTRY_REQUEST\";\nexport const DELETE_ENTRY_SUCCESS = \"DELETE_ENTRY_SUCCESS\";\nexport const DELETE_ENTRY_FAILED = \"DELETE_ENTRY_FAILED\";\n\n// Course Actions\nexport const GET_COURSE_REQUEST = \"GET_COURSE_REQUEST\";\nexport const GET_COURSE_SUCCESS = \"GET_COURSE_SUCCESS\";\nexport const GET_COURSE_FAILED = \"GET_COURSE_FAILED\";\n\nexport const POST_COURSE_REQUEST = \"POST_COURSE_REQUEST\";\nexport const POST_COURSE_SUCCESS = \"POST_COURSE_SUCCESS\";\nexport const POST_COURSE_FAILED = \"POST_COURSE_FAILED\";\n\nexport const PUT_COURSE_REQUEST = \"PUT_COURSE_REQUEST\";\nexport const PUT_COURSE_SUCCESS = \"PUT_COURSE_SUCCESS\";\nexport const PUT_COURSE_FAILED = \"PUT_COURSE_FAILED\";\n\nexport const DELETE_COURSE_REQUEST = \"DELETE_COURSE_REQUEST\";\nexport const DELETE_COURSE_SUCCESS = \"DELETE_COURSE_SUCCESS\";\nexport const DELETE_COURSE_FAILED = \"DELETE_COURSE_FAILED\";\n\n// Instructor Actions\nexport const GET_INSTRUCTOR_REQUEST = \"GET_INSTRUCTOR_REQUEST\";\nexport const GET_INSTRUCTOR_SUCCESS = \"GET_INSTRUCTOR_SUCCESS\";\nexport const GET_INSTRUCTOR_FAILED = \"GET_INSTRUCTOR_FAILED\";\n\nexport const POST_INSTRUCTOR_REQUEST = \"POST_INSTRUCTOR_REQUEST\";\nexport const POST_INSTRUCTOR_SUCCESS = \"POST_INSTRUCTOR_SUCCESS\";\nexport const POST_INSTRUCTOR_FAILED = \"POST_INSTRUCTOR_FAILED\";\n\nexport const PUT_INSTRUCTOR_REQUEST = \"PUT_INSTRUCTOR_REQUEST\";\nexport const PUT_INSTRUCTOR_SUCCESS = \"PUT_INSTRUCTOR_SUCCESS\";\nexport const PUT_INSTRUCTOR_FAILED = \"PUT_INSTRUCTOR_FAILED\";\n\nexport const DELETE_INSTRUCTOR_REQUEST = \"DELETE_INSTRUCTOR_REQUEST\";\nexport const DELETE_INSTRUCTOR_SUCCESS = \"DELETE_INSTRUCTOR_SUCCESS\";\nexport const DELETE_INSTRUCTOR_FAILED = \"DELETE_INSTRUCTOR_FAILED\";\n\n// Match Actions\nexport const MATCH_REQUEST = \"MATCH_COURSES_REQUEST\";\nexport const MATCH_SUCCESS = \"MATCH_COURSES_SUCCESS\";\nexport const MATCH_FAILED = \"MATCH_COURSES_FAILED\";","import { GET_ENTRY_REQUEST, GET_ENTRY_SUCCESS, GET_ENTRY_FAILED, POST_ENTRY_REQUEST, POST_ENTRY_SUCCESS, POST_ENTRY_FAILED, DELETE_ENTRY_REQUEST, DELETE_ENTRY_SUCCESS, DELETE_ENTRY_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingEntry: false,\n\tgetEntryResp: null,\n\tgetEntryError: null,\n\n\tisPostingEntry: false,\n\tpostEntryResp: null,\n\tpostEntryError: null,\n\n\tisDeletingEntry: false,\n\tdeleteEntryResp: null,\n\tdeleteEntryErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_ENTRY_REQUEST:\n            return {\n                ...state,\n                isGettingEntry: true,\n                getEntryError: null,\n            };\n    \tcase GET_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isGettingEntry: false,\n                getEntryResp: action.payload,\n            };\n    \tcase GET_ENTRY_FAILED:\n            return {\n                ...state,\n                isGettingEntry: false,\n                getEntryError: action.payload,\n            };\n    \tcase POST_ENTRY_REQUEST:\n            return {\n                ...state,\n                isPostingEntry: true,\n                postEntryError: null,\n            };\n    \tcase POST_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isPostingEntry: false,\n                postEntryResp: action.payload,\n            };\n    \tcase POST_ENTRY_FAILED:\n            return {\n                ...state,\n                isPostingEntry: false,\n                postEntryError: action.payload,\n            };\n    \tcase DELETE_ENTRY_REQUEST:\n            return {\n                ...state,\n                isDeletingEntry: true,\n                deleteEntryError: null,\n            };\n    \tcase DELETE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isDeletingEntry: false,\n                deleteEntryResp: action.payload,\n            };\n    \tcase DELETE_ENTRY_FAILED: \n            return {\n                ...state,\n                isDeletingEntry: false,\n                deleteEntryError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { GET_COURSE_REQUEST, GET_COURSE_SUCCESS, GET_COURSE_FAILED, POST_COURSE_REQUEST, POST_COURSE_SUCCESS, POST_COURSE_FAILED, PUT_COURSE_REQUEST, PUT_COURSE_SUCCESS, PUT_COURSE_FAILED, DELETE_COURSE_REQUEST, DELETE_COURSE_SUCCESS, DELETE_COURSE_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingCourse: false,\n\tgetCourseResp: null,\n\tgetCourseError: null,\n\n\tisPostingCourse: false,\n\tpostCourseResp: null,\n\tpostCourseError: null,\n\n    isPuttingCourse: false,\n    putCourseResp: null,\n    putCourseError: null,\n\n\tisDeletingCourse: false,\n\tdeleteCourseResp: null,\n\tdeleteCourseErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_COURSE_REQUEST:\n            return {\n                ...state,\n                isGettingCourse: true,\n                getCourseError: null,\n            };\n    \tcase GET_COURSE_SUCCESS:\n            return {\n                ...state,\n                isGettingCourse: false,\n                getCourseResp: action.payload,\n            };\n    \tcase GET_COURSE_FAILED:\n            return {\n                ...state,\n                isGettingCourse: false,\n                getCourseError: action.payload,\n            };\n    \tcase POST_COURSE_REQUEST:\n            return {\n                ...state,\n                isPostingCourse: true,\n                postCourseError: null,\n            };\n    \tcase POST_COURSE_SUCCESS:\n            return {\n                ...state,\n                isPostingCourse: false,\n                postCourseResp: action.payload,\n            };\n    \tcase POST_COURSE_FAILED:\n            return {\n                ...state,\n                isPostingCourse: false,\n                postCourseError: action.payload,\n            };\n\n        case PUT_COURSE_REQUEST:\n            return {\n                ...state,\n                isPuttingCourse: true,\n                putCourseError: null,\n            };\n        case PUT_COURSE_SUCCESS:\n            return {\n                ...state,\n                isPuttingCourse: false,\n                putCourseResp: action.payload,\n            };\n        case PUT_COURSE_FAILED:\n            return {\n                ...state,\n                isPuttingCourse: false,\n                putCourseError: action.payload,\n            };\n    \tcase DELETE_COURSE_REQUEST:\n            return {\n                ...state,\n                isDeletingCourse: true,\n                deleteCourseError: null,\n            };\n    \tcase DELETE_COURSE_SUCCESS:\n            return {\n                ...state,\n                isDeletingCourse: false,\n                deleteCourseResp: action.payload,\n            };\n    \tcase DELETE_COURSE_FAILED: \n            return {\n                ...state,\n                isDeletingCourse: false,\n                deleteCourseError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { GET_INSTRUCTOR_REQUEST, GET_INSTRUCTOR_SUCCESS, GET_INSTRUCTOR_FAILED, POST_INSTRUCTOR_REQUEST, POST_INSTRUCTOR_SUCCESS, POST_INSTRUCTOR_FAILED, PUT_INSTRUCTOR_REQUEST, PUT_INSTRUCTOR_SUCCESS, PUT_INSTRUCTOR_FAILED, DELETE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_SUCCESS, DELETE_INSTRUCTOR_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingInstructor: false,\n\tgetInstructorResp: null,\n\tgetInstructorError: null,\n\n\tisPostingInstructor: false,\n\tpostInstructorResp: null,\n\tpostInstructorError: null,\n\n    isPuttingInstructor: false,\n    putInstructorResp: null,\n    putInstructorError: null,\n\n\tisDeletingInstructor: false,\n\tdeleteInstructorResp: null,\n\tdeleteInstructorErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isGettingInstructor: true,\n                getInstructorError: null,\n            };\n    \tcase GET_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isGettingInstructor: false,\n                getInstructorResp: action.payload,\n            };\n    \tcase GET_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isGettingInstructor: false,\n                getInstructorError: action.payload,\n            };\n    \tcase POST_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isPostingInstructor: true,\n                postInstructorError: null,\n            };\n    \tcase POST_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isPostingInstructor: false,\n                postInstructorResp: action.payload,\n            };\n    \tcase POST_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isPostingInstructor: false,\n                postInstructorError: action.payload,\n            };\n\n        case PUT_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isPuttingInstructor: true,\n                putInstructorError: null,\n            };\n        case PUT_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isPuttingInstructor: false,\n                putInstructorResp: action.payload,\n            };\n        case PUT_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isPuttingInstructor: false,\n                putInstructorError: action.payload,\n            };\n    \tcase DELETE_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isDeletingInstructor: true,\n                deleteInstructorError: null,\n            };\n    \tcase DELETE_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isDeletingInstructor: false,\n                deleteInstructorResp: action.payload,\n            };\n    \tcase DELETE_INSTRUCTOR_FAILED: \n            return {\n                ...state,\n                isDeletingInstructor: false,\n                deleteInstructorError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { MATCH_REQUEST, MATCH_SUCCESS, MATCH_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisMatching: false,\n\tmatchResp: null,\n\tmatchError: null,\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase MATCH_REQUEST:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatching: true,\n    \t\t\tmatchError: null,\n    \t\t}\n    \tcase MATCH_SUCCESS:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatching: false,\n    \t\t\tmatchResp: action.payload,\n    \t\t}\n    \tcase MATCH_FAILED:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatching: false,\n    \t\t\tmatchError: action.payload,\n    \t\t}\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\n\nimport authReducer from './authReducer.js';\nimport entryReducer from './entryReducer.js';\nimport courseReducer from './courseReducer.js';\nimport instructorReducer from './instructorReducer.js';\nimport matchReducer from './matchReducer.js';\n\nconst createRootReducer = (history) => combineReducers({\n\trouter: connectRouter(history),\n    auth: authReducer,\n    entryRequests: entryReducer,\n    courseRequests: courseReducer,\n    instructorRequests: instructorReducer,\n    match: matchReducer,\n});\n\nexport default createRootReducer","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAvRxCrKYBVXXeSHunaqcvOcvsIv4HPLc8\",\n    authDomain: \"course-6ab40.firebaseapp.com\",\n    databaseURL: \"https://course-6ab40.firebaseio.com\",\n    projectId: \"course-6ab40\",\n    storageBucket: \"course-6ab40.appspot.com\",\n    messagingSenderId: \"346684960816\",\n    appId: \"1:346684960816:web:fdd8ed2590afc1f9bd3df5\",\n    measurementId: \"G-0M3YZSGD24\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const firestore = firebase.firestore();","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, VERIFY_REQUEST, VERIFY_SUCCESS } from '../constants/actionTypes';\nimport { auth, provider } from \"../firebase\";\n\n// Actions\nconst loginRequest = () => {\n    return {\n        type: LOGIN_REQUEST,\n    }\n}\n\nconst loginSuccess = (res) => {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: res,\n    }\n}\n\nconst loginFailed = (err) => {\n    return {\n        type: LOGIN_FAILED,\n        payload: err,\n    }\n}\n\nconst logoutRequest = () => {\n    return {\n        type: LOGOUT_REQUEST,\n    }\n}\n\nconst logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n    }\n}\n\nconst logoutFailed = (err) => {\n    return {\n        type: LOGOUT_FAILED,\n        payload: err,\n    }\n}\n\nconst verifyRequest = () => {\n    return {\n        type: VERIFY_REQUEST,\n    };\n}\n\nconst verifySuccess = () => {\n    return {\n        type: VERIFY_SUCCESS,\n    };\n}\n\n// Thunk\nexport const login = (email, password) => dispatch => {\n    dispatch(loginRequest());\n\n    auth.signInWithEmailAndPassword(email, password).then(res => {\n        dispatch(loginSuccess(res.user));\n    }).catch(err => {\n        dispatch(loginFailed(err));\n    });\n};\n\nexport const loginWithGoogle = () => dispatch => {\n    dispatch(loginRequest());\n\n    auth.signInWithPopup(provider).then(res => {\n        dispatch(loginSuccess(res.user));\n    }).catch(err => {\n        dispatch(loginFailed(err));\n    });\n}\n\nexport const logout = () => dispatch => {\n    dispatch(logoutRequest());\n\n    auth.signOut().then(() => {\n        dispatch(logoutSuccess());\n    }).catch(err => {\n        dispatch(logoutFailed(err));\n    });\n};\n\nexport const verifyAuth = () => dispatch => {\n    dispatch(verifyRequest());\n\n    auth.onAuthStateChanged(user => {\n        if (user) {\n            dispatch(loginSuccess(user));\n        }\n\n        dispatch(verifySuccess());\n    });\n};","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport createRootReducer from './reducers';\nimport { verifyAuth } from \"./actions/authActions\";\n\nconst logger = createLogger({\n\tcollapsed: true\n});\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nexport default function configureStore(preloadedState) {\n\tconst store = createStore(\n\t    createRootReducer(history),\n\t    preloadedState,\n\t    compose(\n\t    \tapplyMiddleware(\n\t    \t\trouterMiddleware(history),\n\t    \t\tthunk,\n\t    \t\tlogger\n\t    \t)\n\t    )\n\t)\n\n\tstore.dispatch(verifyAuth());\n\treturn store\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\n\nconst ProtectedRoute = ({\n    component: Component,\n    isAuthenticated,\n    isVerifying,\n    ...params\n}) => (\n    <Route\n        {...params}\n        render={ props =>\n            isVerifying \n                ? <div /> \n                : isAuthenticated \n                    ? <Component {...props} /> \n                    : <Redirect to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}/>\n        }\n    />\n);\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport { Button, Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport './NavBar.scss';\n\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n\nclass NavBar extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: '',\n            password: '',\n        };\n    }\n\n    // Button Handlers\n    signoutButtonClickHandler = (event) => {\n        this.props.dispatch(logout());\n    }\n\n    // Render\n    render() {\n        return (\n            <Navbar bg=\"dark\" className=\"navbar\" expand=\"sm\" sticky=\"top\" variant=\"dark\">\n                <Navbar.Brand>\n                    <img className=\"d-inline-block align-top\" src={logo} alt=\"\" width=\"30\" height=\"30\"/>\n                    CourseAssign\n                </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\n                    </Nav>\n\n                    <Navbar.Text className=\"text\">\n                        Signed In As: <Link to=\"/\">{this.props.auth.profile.email.substring(0, this.props.auth.profile.email.lastIndexOf(\"@\"))}</Link>\n                    </Navbar.Text>\n                    <Nav.Item>\n                        <Button variant=\"danger\" onClick={this.signoutButtonClickHandler}>Logout</Button>\n                    </Nav.Item>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","const prod = {\n\tAPI_URL: 'https://cs411-project-273718.uc.r.appspot.com/',\n};\n\nconst dev = {\n\tAPI_URL: 'http://127.0.0.1:5000/',\n};\n\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import { GET_ENTRY_REQUEST, GET_ENTRY_SUCCESS, GET_ENTRY_FAILED, POST_ENTRY_REQUEST, POST_ENTRY_SUCCESS, POST_ENTRY_FAILED, DELETE_ENTRY_REQUEST, DELETE_ENTRY_SUCCESS, DELETE_ENTRY_FAILED } from '../constants/actionTypes';\nimport { config } from '../constants/config';\nimport axios from 'axios';\n\n// Actions\nconst getEntryRequest = () => {\n    return {\n        type: GET_ENTRY_REQUEST,\n    }\n}\n\nconst getEntrySuccess = (res) => {\n    return {\n        type: GET_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getEntryFailed = (err) => {\n    return {\n        type: GET_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\nconst postEntryRequest = () => {\n    return {\n        type: POST_ENTRY_REQUEST,\n    }\n}\n\nconst postEntrySuccess = (res) => {\n    return {\n        type: POST_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postEntryFailed = (err) => {\n    return {\n        type: POST_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteEntryRequest = () => {\n    return {\n        type: DELETE_ENTRY_REQUEST,\n    }\n}\n\nconst deleteEntrySuccess = (res) => {\n    return {\n        type: DELETE_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteEntryFailed = (err) => {\n    return {\n        type: DELETE_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/courses'\nexport const getEntries = () => dispatch => new Promise((resolve, reject) => {\n\tdispatch(getEntryRequest());\n\n\tlet body = { \n\t\tcrossDomain: true \n\t};\n\n\taxios.get(\n\t\tconfig.API_URL + '/entries', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(getEntrySuccess(res.data.data));\n\t\tresolve(res.data.data);\n\t}).catch(err => {\n\t\tdispatch(getEntryFailed(err));\n\t\treject(err);\n\t});\n});\n\n// POST: '/entries'\nexport const createEntry = (courseNo, courseName, year, term, primaryInstructor, aPlus, a, aMinus, bPlus, b, bMinus, cPlus, c, cMinus, dPlus, d, dMinus, f) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(postEntryRequest());\n\n\tlet body = {\n\t\tcourseNo: courseNo,\n\t\tcourseName: courseName,\n\t\tyear: year,\n\t\tterm: term,\n\t\tprimaryInstructor: primaryInstructor,\n\t\taPlus: aPlus,\n\t\ta: a,\n\t\taMinus: aMinus,\n\t\tbPlus: bPlus,\n\t\tb: b,\n\t\tbMinus: bMinus,\n\t\tcPlus: cPlus,\n\t\tc: c,\n\t\tcMinus: cMinus,\n\t\tdPlus: dPlus,\n\t\td: d,\n\t\tdMinus: dMinus,\n\t\tf: f,\n\t\tcrossDomain: true\n\t};\n\n\taxios.post(\n\t\tconfig.API_URL + '/entries', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(postEntrySuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(postEntryFailed(err));\n\t\treject(err);\n\t});\n});\n\n// DELETE: '/entries/:courseNo/:courseName/:year/:term/:primaryInstructor'\nexport const deleteEntry = ( courseNo, courseName, year, term, primaryInstructor) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(deleteEntryRequest());\n\t\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.delete(\n\t\tconfig.API_URL + '/entries/' + courseNo + '/' + courseName + '/' + year + '/' + term + '/' + primaryInstructor, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(deleteEntrySuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(deleteEntryFailed(err));\n\t\treject(err);\n\t})\n});","import React from 'react';\nimport { Alert, Button, Col, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getEntries, createEntry } from '../../actions/entryActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        year: null,\n        term: null,\n        primaryInstructor: null,\n        aPlus: null,\n        a: null,\n        aMinus: null,\n        bPlus: null,\n        b: null,\n        bMinus: null,\n        cPlus: null,\n        c: null,\n        cMinus: null,\n        dPlus: null,\n        d: null,\n        dMinus: null,\n        f: null,\n    },\n}\n\nclass NewEntryModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    handleYearSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                year: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleTermSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                term: e.target.value,\n            }\n        });\n    }\n\n    handleInstructorSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                primaryInstructor: parseInt(e.target.value),\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Call\n        this.props.dispatch(createEntry(this.state.form.courseNo, this.state.form.courseName, this.state.form.year, this.state.form.term, this.state.form.primaryInstructor, this.state.form.aPlus, this.state.form.a, this.state.form.aMinus, this.state.form.bPlus, this.state.form.b, this.state.form.bMinus, this.state.form.cPlus, this.state.form.c, this.state.form.cMinus, this.state.form.dPlus, this.state.form.d, this.state.form.dMinus, this.state.form.f)).then(res => {\n            this.props.dispatch(getEntries()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        // Course Map\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        // Instructors Map\n        let instructorsMap = {}\n        if (this.props.instructors) {\n            this.props.instructors.forEach(instructor => {\n                if (!instructorsMap.hasOwnProperty(instructor.instructorId)) {\n                    instructorsMap[instructor.instructorId] = [];\n                }\n\n                instructorsMap[instructor.instructorId].push(instructor.instructorName);\n            })\n        }\n\n        // Years & Terms\n        let years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022];\n        let terms = [\"Fall\", \"Spring\", \"Summer\", \"Winter\"];\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Entry</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"courseNo\">\n                                <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Course No.</option>\n                                    { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n                                \n                            <Form.Group as={Col} controlId=\"courseName\">\n                                <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Course Name</option>\n                                    { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"year\">\n                                <Form.Control as=\"select\" onChange={this.handleYearSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Year</option>\n                                    { years && [...years].map((year, i) => <option key={year} value={year}>{year}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"term\">\n                                <Form.Control as=\"select\" onChange={this.handleTermSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Term</option>\n                                    { terms && [...terms].map((term, i) => <option key={term} value={term}>{term}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"primaryInstructor\">\n                            <Form.Control as=\"select\" onChange={this.handleInstructorSelect} custom>\n                                <option className=\"initial-option\" value={null}>Instructor Name</option>\n                                { Object.entries(instructorsMap).map(([instructorId, instructorName], i) => <option key={instructorId} value={instructorId}>{instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"aPlus\">\n                                <Form.Control required name=\"aPlus\" onChange={this.textInput} placeholder=\"A+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"a\">\n                                <Form.Control required name=\"a\" onChange={this.textInput} placeholder=\"A\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"aMinus\">\n                                <Form.Control required name=\"aMinus\" onChange={this.textInput} placeholder=\"A-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"bPlus\">\n                                <Form.Control required name=\"bPlus\" onChange={this.textInput} placeholder=\"B+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"b\">\n                                <Form.Control required name=\"b\" onChange={this.textInput} placeholder=\"B\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"bMinus\">\n                                <Form.Control required name=\"bMinus\" onChange={this.textInput} placeholder=\"B-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"cPlus\">\n                                <Form.Control required name=\"cPlus\" onChange={this.textInput} placeholder=\"C+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"c\">\n                                <Form.Control required name=\"c\" onChange={this.textInput} placeholder=\"C\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"cMinus\">\n                                <Form.Control required name=\"cMinus\" onChange={this.textInput} placeholder=\"C-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dPlus\">\n                                <Form.Control required name=\"dPlus\" onChange={this.textInput} placeholder=\"D+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"d\">\n                                <Form.Control required name=\"d\" onChange={this.textInput} placeholder=\"D\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dMinus\">\n                                <Form.Control required name=\"dMinus\" onChange={this.textInput} placeholder=\"D-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"f\">\n                                <Form.Control required name=\"f\" onChange={this.textInput} placeholder=\"F\"/>\n                            </Form.Group>\n                        </Form.Row>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Entry</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewEntryModal);","import React from 'react';\nimport { Alert, Button, Col, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getEntries, deleteEntry } from '../../actions/entryActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        year: null,\n        term: null,\n        primaryInstructor: null,\n    },\n}\n\nclass DeleteEntryModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    handleYearSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                year: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleTermSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                term: e.target.value,\n            }\n        });\n    }\n\n    handleInstructorSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                primaryInstructor: parseInt(e.target.value),\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(deleteEntry(this.state.form.courseNo, this.state.form.courseName, this.state.form.year, this.state.form.term, this.state.form.primaryInstructor)).then(res => {\n            this.props.dispatch(getEntries()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }    \n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        let years = new Set();\n        let terms = new Set();\n        let instructorsMap = {};\n        if (this.props.entries) {\n            this.props.entries.forEach(entry => {\n                // Course Map\n                if (!courseMap.hasOwnProperty(entry.courseNo)) {\n                    courseMap[entry.courseNo] = new Set();\n                }\n\n                courseMap[entry.courseNo].add(entry.courseName);\n\n                // Years & Term\n                years.add(entry.year);\n                terms.add(entry.term);\n\n                // Instructors Map\n                if (!instructorsMap.hasOwnProperty(entry.primaryInstructor)) {\n                    instructorsMap[entry.primaryInstructor] = new Set();\n                }\n\n                instructorsMap[entry.primaryInstructor] = entry.instructorName;\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Entry</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"courseNo\">\n                                <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Course No.</option>\n                                    { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n                                \n                            <Form.Group as={Col} controlId=\"courseName\">\n                                <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Course Name</option>\n                                    { courseMap[this.state.form.courseNo] && [...courseMap[this.state.form.courseNo]].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"year\">\n                                <Form.Control as=\"select\" onChange={this.handleYearSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Year</option>\n                                    { years && [...years].map((year, i) => <option key={year} value={year}>{year}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"term\">\n                                <Form.Control as=\"select\" onChange={this.handleTermSelect} custom>\n                                    <option className=\"initial-option\" value={null}>Term</option>\n                                    { terms && [...terms].map((term, i) => <option key={term} value={term}>{term}</option>) }\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"primaryInstructor\">\n                            <Form.Control as=\"select\" onChange={this.handleInstructorSelect} custom>\n                                <option className=\"initial-option\" value={null}>Instructor Name</option>\n                                { Object.entries(instructorsMap).map(([instructorId, instructorName], i) => <option key={instructorId} value={instructorId}>{instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Entry</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteEntryModal);","import { GET_COURSE_REQUEST, GET_COURSE_SUCCESS, GET_COURSE_FAILED, POST_COURSE_REQUEST, POST_COURSE_SUCCESS, POST_COURSE_FAILED, PUT_COURSE_REQUEST, PUT_COURSE_SUCCESS, PUT_COURSE_FAILED, DELETE_COURSE_REQUEST, DELETE_COURSE_SUCCESS, DELETE_COURSE_FAILED } from '../constants/actionTypes';\nimport { config } from '../constants/config';\nimport axios from 'axios';\n\n// Actions\nconst getCourseRequest = () => {\n    return {\n        type: GET_COURSE_REQUEST,\n    }\n}\n\nconst getCourseSuccess = (res) => {\n    return {\n        type: GET_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getCourseFailed = (err) => {\n    return {\n        type: GET_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst postCourseRequest = () => {\n    return {\n        type: POST_COURSE_REQUEST,\n    }\n}\n\nconst postCourseSuccess = (res) => {\n    return {\n        type: POST_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postCourseFailed = (err) => {\n    return {\n        type: POST_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst putCourseRequest = () => {\n    return {\n        type: PUT_COURSE_REQUEST,\n    }\n}\n\nconst putCourseSuccess = (res) => {\n    return {\n        type: PUT_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst putCourseFailed = (err) => {\n    return {\n        type: PUT_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteCourseRequest = () => {\n    return {\n        type: DELETE_COURSE_REQUEST,\n    }\n}\n\nconst deleteCourseSuccess = (res) => {\n    return {\n        type: DELETE_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteCourseFailed = (err) => {\n    return {\n        type: DELETE_COURSE_FAILED,\n        payload: err,\n    }\n}\n\n\n// Thunk\n// GET: '/courses'\nexport const getCourses = () => dispatch => new Promise((resolve, reject) => {\n\tdispatch(getCourseRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tconfig.API_URL + '/courses', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(getCourseSuccess(res.data.data));\n\t\tresolve(res.data.data);\n\t}).catch(err => {\n\t\tdispatch(getCourseFailed(err));\n\t\treject(err);\n\t});\n})\n\n\n// POST: '/courses'\nexport const createCourse = (courseNo, courseName, courseDesc) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(postCourseRequest());\n\n\tlet body = {\n\t\tcourseNo: courseNo,\n\t\tcourseName: courseName,\n\t\tcourseDesc: courseDesc,\n\t\tcrossDomain: true\n\t}\n\n\taxios.post(\n\t\tconfig.API_URL + '/courses', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(postCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(postCourseFailed(err));\n\t\treject(err);\n\t});\n});\n\n// PUT: '/courses/:courseNo/:courseName'\nexport const updateCourse = (courseNo, courseName, courseDesc) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(putCourseRequest());\n\t\n\tlet body = {\n\t\tcourseDesc: courseDesc,\n\t\tcrossDomain: true\n\t}\n\n\taxios.put(\n\t\tconfig.API_URL + '/courses/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(putCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(putCourseFailed(err));\n\t\treject(err);\n\t});\n});\n\n// DELETE: '/courses/:courseNo/:courseName'\nexport const deleteCourse = (courseNo, courseName) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(deleteCourseRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t}\n\n\taxios.delete(\n\t\tconfig.API_URL + '/courses/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(deleteCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(deleteCourseFailed(err));\n\t\treject(err);\n\t});\n});","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, createCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        courseDesc: null,\n    },\n}\n\nclass NewCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(createCourse(this.state.form.courseNo, this.state.form.courseName, this.state.form.courseDesc)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"courseNo\">\n                            <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"courseDesc\">\n                            <Form.Control required as=\"textarea\" rows=\"5\" name=\"courseDesc\" onChange={this.textInput} placeholder=\"Course Description\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewCourseModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, updateCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        courseDesc: null,\n    },\n}\n\nclass UpdateCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(updateCourse(this.state.form.courseNo, this.state.form.courseName, this.state.form.courseDesc)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                       <Form.Group controlId=\"courseNo\">\n                            <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                <option className=\"initial-option\" value={null}>Course No.</option>\n                                { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option className=\"initial-option\" value={null}>Course Name</option>\n                                { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"courseDesc\">\n                            <Form.Control required as=\"textarea\" rows=\"5\" name=\"courseDesc\" onChange={this.textInput} placeholder=\"Course Description\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Update Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(UpdateCourseModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, deleteCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n    },\n}\n\nclass DeleteCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Axios Request\n        this.props.dispatch(deleteCourse(this.state.form.courseNo, this.state.form.courseName)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"courseNo\">\n                            <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                <option className=\"initial-option\" value={null}>Course No.</option>\n                                { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option className=\"initial-option\" value={null}>Course Name</option>\n                                { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteCourseModal);","import { GET_INSTRUCTOR_REQUEST, GET_INSTRUCTOR_SUCCESS, GET_INSTRUCTOR_FAILED, POST_INSTRUCTOR_REQUEST, POST_INSTRUCTOR_SUCCESS, POST_INSTRUCTOR_FAILED, PUT_INSTRUCTOR_REQUEST, PUT_INSTRUCTOR_SUCCESS, PUT_INSTRUCTOR_FAILED, DELETE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_SUCCESS, DELETE_INSTRUCTOR_FAILED } from '../constants/actionTypes';\nimport { config } from '../constants/config';\nimport axios from 'axios';\n\n// Actions\nconst getInstructorRequest = () => {\n    return {\n        type: GET_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst getInstructorSuccess = (res) => {\n    return {\n        type: GET_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getInstructorFailed = (err) => {\n    return {\n        type: GET_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst postInstructorRequest = () => {\n    return {\n        type: POST_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst postInstructorSuccess = (res) => {\n    return {\n        type: POST_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postInstructorFailed = (err) => {\n    return {\n        type: POST_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst putInstructorRequest = () => {\n    return {\n        type: PUT_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst putInstructorSuccess = (res) => {\n    return {\n        type: PUT_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst putInstructorFailed = (err) => {\n    return {\n        type: PUT_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteInstructorRequest = () => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst deleteInstructorSuccess = (res) => {\n    return {\n        type: DELETE_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteInstructorFailed = (err) => {\n    return {\n        type: DELETE_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/instructors'\nexport const getInstructors = () => dispatch => new Promise((resolve, reject) => {\n    dispatch(getInstructorRequest());\n\n    let body = {\n        crossDomain: true\n    };\n\n    axios.get(\n        config.API_URL + '/instructors', \n        body\n    ).then(res => {\n        dispatch(getInstructorSuccess(res.data.data));\n        resolve(res.data.data);\n    }).catch(err => {\n        dispatch(getInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// POST: '/instructors'\nexport const createInstructor = (instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(postInstructorRequest());\n\n    let body = {\n        instructorName: instructorName,\n        researchInterests: researchInterests,\n        crossDomain: true\n    }\n\n    axios.post(\n        config.API_URL + '/instructors', \n        body\n    ).then(res => {\n        dispatch(postInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(postInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// PUT: '/instructors/:instructorId'\nexport const updateInstructor = (instructorId, instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(putInstructorRequest());\n    \n    let body = {\n        instructorName: instructorName,\n        researchInterests: researchInterests,\n        crossDomain: true\n    }\n\n    axios.put(\n        config.API_URL + '/instructors/' + instructorId,\n        body\n    ).then(res => {\n        dispatch(putInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(putInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// DELETE: '/courses/:courseNo/:courseName'\nexport const deleteInstructor = (instructorId, instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(deleteInstructorRequest());\n\n    let body = {\n        crossDomain: true\n    }\n\n    axios.delete(\n        config.API_URL + '/instructors/' + instructorId, \n        body\n    ).then(res => {\n        dispatch(deleteInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(deleteInstructorFailed(err));\n        reject(err);\n    });\n});","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, createInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorName: null,\n        researchInterests: null,\n    },\n}\n\nclass NewInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(createInstructor(this.state.form.instructorName, this.state.form.researchInterests)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control required name=\"instructorName\" onChange={this.textInput} placeholder=\"Instructor Name\"/>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"researchInterests\">\n                            <Form.Control required name=\"researchInterests\" onChange={this.textInput} placeholder=\"Research Interests\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewInstructorModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, updateInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorId: null,\n        instructorName: null,\n        researchInterests: null,\n    },\n}\n\nclass UpdateInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                instructorId: JSON.parse(e.target.value).instructorId,\n                instructorName: JSON.parse(e.target.value).instructorName,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(updateInstructor(this.state.form.instructorId, this.state.form.instructorName, this.state.form.researchInterests)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option className=\"initial-option\" value={null}>Instructor Name</option>\n                                { this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"researchInterests\">\n                            <Form.Control required name=\"researchInterests\" onChange={this.textInput} placeholder=\"Research Interests\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Update Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(UpdateInstructorModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, deleteInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorId: null,\n    },\n}\n\nclass DeleteInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Select\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                instructorId: JSON.parse(e.target.value).instructorId,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(deleteInstructor(this.state.form.instructorId)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option className=\"initial-option\" value={null}>Instructor Name</option>\n                                { this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteInstructorModal);","import React from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport './LoadingButton.scss';\n\nconst LoadingButton = (props) => {\n    return (\n\t\t<Button {...props} disabled>\n\t\t\t<Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\n\t\t</Button>\n    );\n}\n\nexport default LoadingButton;","import React, { Component } from 'react';\nimport { Button, Col, Form, InputGroup } from 'react-bootstrap';\nimport LoadingButton from './LoadingButton';\nimport './SearchBar.scss';\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            filter: null,\n            selection: null,\n        };\n    }\n\n    // Select    \n    handleFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n            selection: null,\n        });\n    }\n\n    handleDropdown = (e) => {\n        this.setState({\n            selection: e.target.value\n        });\n    }\n\n    search = (e) => {\n        if (this.state.filter && this.state.selection) {\n            this.props.search(this.state.filter, this.state.selection);\n        }\n    }\n\n    // Render\n    render() {\n        return (\n             <Form>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"3\" controlId=\"\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"inputGroupPrepend\">Filter:</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control as=\"select\" onChange={this.handleFilter} custom>\n                                <option value={null}></option>\n                                <option value=\"instructor\">Instructor</option>\n                                <option value=\"course\">Course</option>\n                            </Form.Control>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"7\" controlId=\"\">\n                        <Form.Control as=\"select\" onChange={this.handleDropdown} custom>\n                            <option value={null}></option>\n                            { this.state.filter === \"instructor\"\n                                ? this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>)\n                                : this.state.filter === \"course\"\n                                    ? this.props.courses && this.props.courses.map((course, i) => <option key={course.courseNo + course.courseName} value={JSON.stringify(course)}>{'CS ' + course.courseNo + ': ' + course.courseName}</option>)\n                                    : null\n                            }\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"2\" controlId=\"\">\n                        { this.props.isLoading\n                            ? <LoadingButton block variant=\"light\"/>\n                            : <Button block onClick={this.search} variant=\"light\">Search</Button>\n                        }\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = (props) => {\n    return (\n        <div className=\"spinner\">\n            <Spinner {...props}/>\n        </div>\n    );\n}\n\nexport default LoadingSpinner;","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport LoadingSpinner from './LoadingSpinner';\nimport './CardList.scss';\n\nconst CardList = (props) => {\n    if (props.isLoading) {\n        return (\n            <LoadingSpinner animation=\"border\" role=\"status\"/>\n        );\n    } else {\n        return (\n            <OverlayTrigger placement=\"left\" overlay={\n                <Tooltip>\n                    Filter: {props.filter ? props.filter.charAt(0).toUpperCase() + props.filter.slice(1) : \"Null\"}<br/>Selection: {props.selection ? props.selection : \"Null\"}\n                </Tooltip>\n            }>\n                <div className=\"card-list\">\n                    { props.filter === \"instructor\"\n                        ? props.data && props.data.map((course, i) => \n                            <Card key={course.courseName + i}>\n                                <Card.Title>CS{course.courseNo}: {course.courseName}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">Relevancy Score: {course.score.toFixed(3)}</Card.Subtitle>\n                                <Card.Text>{course.courseDesc}</Card.Text>\n                            </Card>\n                        ): props.filter === \"course\"\n                                ? props.data && props.data.map((instructor, i) => \n                                    <Card key={instructor.instructorId}>\n                                        <Card.Title>{instructor.instructorName}</Card.Title>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">Relevancy Score: {instructor.score.toFixed(3)}</Card.Subtitle>\n                                        <Card.Text>{instructor.researchInterests}</Card.Text>\n                                    </Card>\n                                ): null\n                    }\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\n\nexport default CardList;","import { MATCH_REQUEST, MATCH_SUCCESS, MATCH_FAILED } from '../constants/actionTypes';\nimport { config } from '../constants/config';\nimport axios from 'axios';\n\n// Actions\nconst matchRequest = () => {\n    return {\n        type: MATCH_REQUEST,\n    }\n}\n\nconst matchSuccess = (res) => {\n    return {\n        type: MATCH_SUCCESS,\n        payload: res,\n    }\n}\n\nconst matchFailed = (err) => {\n    return {\n        type: MATCH_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/matches/course/:courseNo/:courseName''\nexport const matchInstructorsToCourse = (courseNo, courseName) => dispatch => {\n\tdispatch(matchRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tconfig.API_URL + '/matches/course/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(matchSuccess(res.data.data));\n\t}).catch(err => {\n\t\tdispatch(matchFailed(err));\n\t});\n}\n\n// GET: '/matches/instructor/<instructorId>'\nexport const matchCoursesToInstructor = (instructorId) => dispatch => {\n\tdispatch(matchRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tconfig.API_URL + '/matches/instructor/' + instructorId, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(matchSuccess(res.data.data));\n\t}).catch(err => {\n\t\tdispatch(matchFailed(err));\n\t});\n}","import React from 'react';\nimport { Accordion, Card, ListGroup } from 'react-bootstrap';\nimport NavBar from './NavBar';\nimport NewEntryModal from './modals/NewEntryModal';\nimport DeleteEntryModal from './modals/DeleteEntryModal';\nimport NewCourseModal from './modals/NewCourseModal';\nimport UpdateCourseModal from './modals/UpdateCourseModal';\nimport DeleteCourseModal from './modals/DeleteCourseModal';\nimport NewInstructorModal from './modals/NewInstructorModal';\nimport UpdateInstructorModal from './modals/UpdateInstructorModal';\nimport DeleteInstructorModal from './modals/DeleteInstructorModal';\nimport SearchBar from '../components/SearchBar';\nimport CardList from '../components/CardList';\nimport './HomeView.scss';\n\nimport { connect } from 'react-redux';\nimport { getEntries } from '../actions/entryActions';\nimport { getCourses } from '../actions/courseActions';\nimport { getInstructors } from '../actions/instructorActions';\nimport { matchInstructorsToCourse, matchCoursesToInstructor } from '../actions/matchActions';\n\nclass HomeView extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            showNewEntryModal: false,\n            showDeleteEntryModal: false,\n\n            showNewCourseModal: false,\n            showUpdateCourseModal: false,\n            showDeleteCourseModal: false,\n\n            showNewInstructorModal: false,\n            showUpdateInstructorModal: false,\n            showDeleteInstructorModal: false,\n\n            filter: null,\n            selection: null,\n\n            responseFilter: null,\n            responseSelection: null,\n        };\n    }\n\n    // Lifecycle Methods\n    componentDidMount() {\n        this.refreshData()\n    }\n    \n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    // Refresh Data Every Five Minutes\n    refreshData = () => {\n        Promise.all([\n            this.props.dispatch(getEntries()),\n            this.props.dispatch(getCourses()),\n            this.props.dispatch(getInstructors())\n        ]).then(res => {\n            this.timer = setTimeout(this.refreshData, 300000);\n        }).catch(err => {});\n    }\n\n    // Modals\n    openNewEntryModal = () => { this.setState({ showNewEntryModal: true }); };\n    closeNewEntryModal = () => { this.setState({ showNewEntryModal: false }); };\n\n    openDeleteEntryModal = () => { this.setState({ showDeleteEntryModal: true }); };\n    closeDeleteEntryModal = () => { this.setState({ showDeleteEntryModal: false }); };\n\n    openNewCourseModal = () => { this.setState({ showNewCourseModal: true }); };\n    closeNewCourseModal = () => { this.setState({ showNewCourseModal: false }); };\n\n    openUpdateCourseModal = () => { this.setState({ showUpdateCourseModal: true }); };\n    closeUpdateCourseModal = () => { this.setState({ showUpdateCourseModal: false }); };\n\n    openDeleteCourseModal = () => { this.setState({ showDeleteCourseModal: true }); };\n    closeDeleteCourseModal = () => { this.setState({ showDeleteCourseModal: false }); };\n\n    openNewInstructorModal = () => { this.setState({ showNewInstructorModal: true }); };\n    closeNewInstructorModal = () => { this.setState({ showNewInstructorModal: false }); };\n\n    openUpdateInstructorModal = () => { this.setState({ showUpdateInstructorModal: true }); };\n    closeUpdateInstructorModal = () => { this.setState({ showUpdateInstructorModal: false }); };\n\n    openDeleteInstructorModal = () => { this.setState({ showDeleteInstructorModal: true }); };\n    closeDeleteInstructorModal = () => { this.setState({ showDeleteInstructorModal: false }); };\n\n    // Open Current Version\n    findEntries = () => {\n        this.props.dispatch(getEntries()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    findCourses = () => {\n        this.props.dispatch(getCourses()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    findInstructors = () => {\n        this.props.dispatch(getInstructors()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Select Menu\n    handleFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n            selection: null,\n        });\n    }\n\n    handleDropdown = (e) => {\n        this.setState({\n            selection: e.target.value\n        });\n    }\n\n    search = (filter, selection) => {\n        if (filter === \"instructor\") {\n            this.setState({\n                responseFilter: filter,\n                responseSelection: selection\n            });\n\n            this.props.dispatch(matchCoursesToInstructor(JSON.parse(selection).instructorId));\n        } else if (filter === \"course\") {\n            this.setState({\n                responseFilter: filter,\n                responseSelection: selection\n            });\n\n            this.props.dispatch(matchInstructorsToCourse(JSON.parse(selection).courseNo, JSON.parse(selection).courseName));\n        } else {\n            this.setState({\n                responseFilter: null,\n                responseSelection: null\n            });\n        }\n    }\n\n    // Render\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar history={this.props.history}/>\n                <div className=\"home-screen\">\n                    <div className=\"left\">\n                        <NewEntryModal courses={this.props.courseRequests.getCourseResp} instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showNewEntryModal} close={this.closeNewEntryModal}/>\n                        <DeleteEntryModal entries={this.props.entryRequests.getEntryResp} visibility={this.state.showDeleteEntryModal} close={this.closeDeleteEntryModal}/>\n                        <NewCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showNewCourseModal} close={this.closeNewCourseModal}/>\n                        <UpdateCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showUpdateCourseModal} close={this.closeUpdateCourseModal}/>\n                        <DeleteCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showDeleteCourseModal} close={this.closeDeleteCourseModal}/>\n                        <NewInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showNewInstructorModal} close={this.closeNewInstructorModal}/>\n                        <UpdateInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showUpdateInstructorModal} close={this.closeUpdateInstructorModal}/>\n                        <DeleteInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showDeleteInstructorModal} close={this.closeDeleteInstructorModal}/>\n\n                        <Accordion defaultActiveKey=\"-1\">\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <span>Entry Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewEntryModal}>New Entry</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteEntryModal}>Delete Entry</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                    <span>Course Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewCourseModal}>New Course</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openUpdateCourseModal}>Update Course</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteCourseModal}>Delete Course</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                    <span>Instructor Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"2\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewInstructorModal}>New Instructor</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openUpdateInstructorModal}>Update Instructor</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteInstructorModal}>Delete Instructor</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                    <span>Dataset Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"3\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findEntries}>Find Entries</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findCourses}>Find Courses</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findInstructors}>Find Instructors</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"content\">\n                            <SearchBar courses={this.props.courseRequests.getCourseResp} instructors={this.props.instructorRequests.getInstructorResp} isLoading={this.props.match.isMatching} search={this.search}/>\n                            <CardList filter={this.state.responseFilter} selection={ this.state.responseFilter === \"instructor\" ? JSON.parse(this.state.responseSelection).instructorName : this.state.responseFilter === \"course\" ? JSON.parse(this.state.responseSelection).courseName : null} data={this.props.match.matchResp} isLoading={this.props.match.isMatching}/>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    };\n};\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n        entryRequests: store.entryRequests,\n        courseRequests: store.courseRequests,\n        instructorRequests: store.instructorRequests,\n        match: store.match,\n    }\n}\n\nexport default connect(mapStateToProps)(HomeView);","import React, { Component } from 'react';\nimport { Redirect } from \"react-router\";\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport background from '../assets/background.jpg';\nimport './LoginView.scss';\n\nimport { connect } from 'react-redux';\nimport { login, loginWithGoogle } from '../actions/authActions';\n\nclass LoginView extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            ...this.state,\n            [e.target.name]: e.target.value.trim(),\n        });\n    }\n\n    // Button Handlers\n    signInButtonClickHandler = (e) => {\n        this.props.dispatch(login(this.state.email, this.state.password))\n    }\n\n    googleSignInButtonClickHandler = (e) => {\n        this.props.dispatch(loginWithGoogle());\n    }\n\n    registerButtonClickHandler = (e) => {\n        // TODO:\n        alert(\"Registration is currently disabled. Please sign-in through Google.\")\n    }\n\n    // Render\n    render() {\n        if (this.props.auth.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        } else { \n            return (\n                <div className=\"login\">\n                    <div className=\"left\">\n                        <img className=\"background\" alt='' src={background} />\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"header\">\n                            <h1 className=\"brand\">CourseAssign</h1>\n                        </div>\n\n                        <Form className=\"form\">\n                            { this.props.auth.loginError && <Alert variant=\"danger\">Invalid email/password combination!</Alert> }\n                            \n                            <Form.Group controlId=\"email\">\n                                <Form.Control required name=\"email\" onChange={this.textInput} placeholder='Email'/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"password\">\n                                <Form.Control type=\"password\" name=\"password\" onChange={this.textInput} placeholder='Password'/>\n                            </Form.Group>\n\n                            <Button block className=\"signin-button\" onClick={this.signInButtonClickHandler}>Sign In</Button>\n\n                            <Button block className=\"signin-button\" onClick={this.googleSignInButtonClickHandler}>Sign In With Google</Button>\n\n                            <Button block className=\"register-button\" onClick={this.registerButtonClickHandler}>Register</Button>\n                        </Form>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(LoginView);","import React from 'react';\nimport { Route, Switch } from 'react-router'\nimport { connect } from 'react-redux';\nimport './App.scss';\n\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport HomeView from './containers/HomeView';\nimport LoginView from './containers/LoginView';\n\nfunction AppRoutes(props) {\n    return (\n        <Switch>\n            <Route exact path=\"/login\" component={LoginView} />\n            <ProtectedRoute exact path=\"/\" component={HomeView} isAuthenticated={props.isAuthenticated} isVerifying={props.isVerifying}/>\n        </Switch>\n    );\n};\n\nfunction mapStateToProps(store) {\n    return {\n        isAuthenticated: store.auth.isAuthenticated,\n        isVerifying: store.auth.isVerifying,\n    };\n};\n\nexport default connect(mapStateToProps)(AppRoutes);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store';\nimport './App.scss';\n\nimport AppRoutes from \"./AppRoutes\";\n\nconst store = configureStore();\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <AppRoutes/>\n            </ConnectedRouter>\n        </Provider>\n    );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.23c73952.jpg\";"],"sourceRoot":""}