{"version":3,"sources":["constants/actionTypes.js","reducers/authReducer.js","reducers/entryReducer.js","reducers/courseReducer.js","reducers/instructorReducer.js","reducers/matchReducer.js","reducers/index.js","firebase.js","actions/authActions.js","store.js","ProtectedRoute.jsx","containers/NavBar.jsx","actions/entryActions.js","containers/modals/NewEntryModal.jsx","containers/modals/DeleteEntryModal.jsx","actions/courseActions.js","containers/modals/NewCourseModal.jsx","containers/modals/UpdateCourseModal.jsx","containers/modals/DeleteCourseModal.jsx","actions/instructorActions.js","containers/modals/NewInstructorModal.jsx","containers/modals/UpdateInstructorModal.jsx","containers/modals/DeleteInstructorModal.jsx","components/CardList.jsx","components/LoadingButton.jsx","components/LoadingSpinner.jsx","actions/matchActions.js","containers/HomeView.jsx","containers/LoginView.jsx","AppRoutes.jsx","App.jsx","serviceWorker.js","index.js","assets/logo.svg","assets/background.jpg"],"names":["BASE_URL","initialState","isLoggingIn","isLoggingOut","isVerifying","loginError","logoutError","isAuthenticated","profile","state","action","type","payload","isGettingEntry","getEntryResp","getEntryError","isPostingEntry","postEntryResp","postEntryError","isDeletingEntry","deleteEntryResp","deleteEntryErr","deleteEntryError","paylod","isGettingCourse","getCourseResp","getCourseError","isPostingCourse","postCourseResp","postCourseError","isPuttingCourse","putCourseResp","putCourseError","isDeletingCourse","deleteCourseResp","deleteCourseErr","deleteCourseError","isGettingInstructor","getInstructorResp","getInstructorError","isPostingInstructor","postInstructorResp","postInstructorError","isPuttingInstructor","putInstructorResp","putInstructorError","isDeletingInstructor","deleteInstructorResp","deleteInstructorErr","deleteInstructorError","isMatching","matchResp","matchError","createRootReducer","history","combineReducers","router","connectRouter","auth","authReducer","entryRequests","entryReducer","courseRequests","courseReducer","instructorRequests","instructorReducer","match","matchReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","loginSuccess","firestore","res","loginFailed","err","logger","createLogger","collapsed","createBrowserHistory","basename","process","ProtectedRoute","Component","component","params","render","props","to","pathname","from","location","NavBar","signoutButtonClickHandler","event","dispatch","signOut","then","catch","logoutFailed","username","password","Navbar","bg","className","expand","sticky","variant","Brand","src","logo","alt","width","height","Toggle","aria-controls","Collapse","Nav","Text","this","email","substring","lastIndexOf","Item","Button","onClick","connect","store","getEntries","Promise","resolve","reject","axios","get","crossDomain","getEntrySuccess","data","getEntryFailed","error","form","courseNo","courseName","year","term","primaryInstructor","aPlus","a","aMinus","bPlus","b","bMinus","cPlus","c","cMinus","dPlus","d","dMinus","f","NewEntryModal","textInput","e","setState","target","name","value","trim","submit","entry","body","post","postEntrySuccess","postEntryFailed","close","console","log","Modal","size","show","visibility","onHide","Header","closeButton","Title","Body","Form","Row","Group","as","Col","controlId","Control","required","onChange","placeholder","Alert","Footer","React","DeleteEntryModal","getCourses","getCourseSuccess","getCourseFailed","courseDesc","NewCourseModal","postCourseSuccess","postCourseFailed","rows","UpdateCourseModal","handleNumberSelect","parseInt","handleNameSelect","put","putCourseSuccess","putCourseFailed","courseMap","courses","forEach","course","hasOwnProperty","push","custom","Object","keys","map","i","key","DeleteCourseModal","delete","deleteCourseSuccess","deleteCourseFailed","getInstructors","getInstructorSuccess","getInstructorFailed","instructorName","researchInterests","NewInstructorModal","postInstructorSuccess","postInstructorFailed","instructorId","UpdateInstructorModal","JSON","parse","putInstructorSuccess","putInstructorFailed","instructors","instructor","stringify","DeleteInstructorModal","deleteInstructorSuccess","deleteInstructorFailed","CardList","OverlayTrigger","placement","overlay","Tooltip","filter","charAt","toUpperCase","slice","selection","Card","Subtitle","score","LoadingButton","disabled","Spinner","animation","role","aria-hidden","LoadingSpinner","matchSuccess","matchFailed","HomeView","refreshData","all","timer","setTimeout","openNewEntryModal","showNewEntryModal","closeNewEntryModal","openDeleteEntryModal","showDeleteEntryModal","closeDeleteEntryModal","openNewCourseModal","showNewCourseModal","closeNewCourseModal","openUpdateCourseModal","showUpdateCourseModal","closeUpdateCourseModal","openDeleteCourseModal","showDeleteCourseModal","closeDeleteCourseModal","openNewInstructorModal","showNewInstructorModal","closeNewInstructorModal","openUpdateInstructorModal","showUpdateInstructorModal","closeUpdateInstructorModal","openDeleteInstructorModal","showDeleteInstructorModal","closeDeleteInstructorModal","findEntries","doc","window","open","document","write","findCourses","findInstructors","handleFilter","handleDropdown","search","responseFilter","responseSelection","clearTimeout","Fragment","Accordion","defaultActiveKey","eventKey","ListGroup","md","InputGroup","Prepend","id","block","LoginView","signInButtonClickHandler","signInWithEmailAndPassword","user","googleSignInButtonClickHandler","signInWithPopup","registerButtonClickHandler","alert","background","exact","path","preloadedState","createStore","compose","applyMiddleware","routerMiddleware","thunk","onAuthStateChanged","configureStore","App","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.30e420d0.chunk.js","sourcesContent":["export const SAMPLE_ACTION_TYPE = \"SAMPLE_ACTION_TYPE\";\nexport const BASE_URL = 'https://cs411-project-273718.uc.r.appspot.com/';\n\n// Auth Actions\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED = \"LOGOUT_FAILED\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\n// Entry Actions\nexport const GET_ENTRY_REQUEST = \"GET_ENTRY_REQUEST\";\nexport const GET_ENTRY_SUCCESS = \"GET_ENTRY_SUCCESS\";\nexport const GET_ENTRY_FAILED = \"GET_ENTRY_FAILED\";\n\nexport const POST_ENTRY_REQUEST = \"POST_ENTRY_REQUEST\";\nexport const POST_ENTRY_SUCCESS = \"POST_ENTRY_SUCCESS\";\nexport const POST_ENTRY_FAILED = \"POST_ENTRY_FAILED\";\n\nexport const DELETE_ENTRY_REQUEST = \"DELETE_ENTRY_REQUEST\";\nexport const DELETE_ENTRY_SUCCESS = \"DELETE_ENTRY_SUCCESS\";\nexport const DELETE_ENTRY_FAILED = \"DELETE_ENTRY_FAILED\";\n\n// Course Actions\nexport const GET_COURSE_REQUEST = \"GET_COURSE_REQUEST\";\nexport const GET_COURSE_SUCCESS = \"GET_COURSE_SUCCESS\";\nexport const GET_COURSE_FAILED = \"GET_COURSE_FAILED\";\n\nexport const POST_COURSE_REQUEST = \"POST_COURSE_REQUEST\";\nexport const POST_COURSE_SUCCESS = \"POST_COURSE_SUCCESS\";\nexport const POST_COURSE_FAILED = \"POST_COURSE_FAILED\";\n\nexport const PUT_COURSE_REQUEST = \"PUT_COURSE_REQUEST\";\nexport const PUT_COURSE_SUCCESS = \"PUT_COURSE_SUCCESS\";\nexport const PUT_COURSE_FAILED = \"PUT_COURSE_FAILED\";\n\nexport const DELETE_COURSE_REQUEST = \"DELETE_COURSE_REQUEST\";\nexport const DELETE_COURSE_SUCCESS = \"DELETE_COURSE_SUCCESS\";\nexport const DELETE_COURSE_FAILED = \"DELETE_COURSE_FAILED\";\n\n// Instructor Actions\nexport const GET_INSTRUCTOR_REQUEST = \"GET_INSTRUCTOR_REQUEST\";\nexport const GET_INSTRUCTOR_SUCCESS = \"GET_INSTRUCTOR_SUCCESS\";\nexport const GET_INSTRUCTOR_FAILED = \"GET_INSTRUCTOR_FAILED\";\n\nexport const POST_INSTRUCTOR_REQUEST = \"POST_INSTRUCTOR_REQUEST\";\nexport const POST_INSTRUCTOR_SUCCESS = \"POST_INSTRUCTOR_SUCCESS\";\nexport const POST_INSTRUCTOR_FAILED = \"POST_INSTRUCTOR_FAILED\";\n\nexport const PUT_INSTRUCTOR_REQUEST = \"PUT_INSTRUCTOR_REQUEST\";\nexport const PUT_INSTRUCTOR_SUCCESS = \"PUT_INSTRUCTOR_SUCCESS\";\nexport const PUT_INSTRUCTOR_FAILED = \"PUT_INSTRUCTOR_FAILED\";\n\nexport const DELETE_INSTRUCTOR_REQUEST = \"DELETE_INSTRUCTOR_REQUEST\";\nexport const DELETE_INSTRUCTOR_SUCCESS = \"DELETE_INSTRUCTOR_SUCCESS\";\nexport const DELETE_INSTRUCTOR_FAILED = \"DELETE_INSTRUCTOR_FAILED\";\n\n// Match Actions\nexport const MATCH_REQUEST = \"MATCH_COURSES_REQUEST\";\nexport const MATCH_SUCCESS = \"MATCH_COURSES_SUCCESS\";\nexport const MATCH_FAILED = \"MATCH_COURSES_FAILED\";","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, VERIFY_REQUEST, VERIFY_SUCCESS } from '../constants/actionTypes';\n\nconst initialState = {\n    isLoggingIn: false,\n    isLoggingOut: false,\n    isVerifying: false,\n    loginError: null,\n    logoutError: null,\n    isAuthenticated: false,\n    \n    profile: {}\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoggingIn: true,\n                loginError: null,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: true,\n                profile: action.payload,\n            };\n        case LOGIN_FAILED:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: false,\n                loginError: action.payload,\n            };\n        case LOGOUT_REQUEST:\n            return {\n                ...state,\n                isLoggingOut: true,\n                logoutError: null,\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isLoggingOut: false,\n                isAuthenticated: false,\n                profile: {},\n            };\n        case LOGOUT_FAILED:\n            return {\n                ...state,\n                isLoggingOut: false,\n                logoutError: action.payload,\n            };\n        case VERIFY_REQUEST:\n            return {\n                ...state,\n                isVerifying: true,\n            };\n        case VERIFY_SUCCESS:\n            return {\n                ...state,\n                isVerifying: false,\n            };\n        default:\n            return state;\n    }\n};","import { GET_ENTRY_REQUEST, GET_ENTRY_SUCCESS, GET_ENTRY_FAILED, POST_ENTRY_REQUEST, POST_ENTRY_SUCCESS, POST_ENTRY_FAILED, DELETE_ENTRY_REQUEST, DELETE_ENTRY_SUCCESS, DELETE_ENTRY_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingEntry: false,\n\tgetEntryResp: null,\n\tgetEntryError: null,\n\n\tisPostingEntry: false,\n\tpostEntryResp: null,\n\tpostEntryError: null,\n\n\tisDeletingEntry: false,\n\tdeleteEntryResp: null,\n\tdeleteEntryErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_ENTRY_REQUEST:\n            return {\n                ...state,\n                isGettingEntry: true,\n                getEntryError: null,\n            };\n    \tcase GET_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isGettingEntry: false,\n                getEntryResp: action.payload,\n            };\n    \tcase GET_ENTRY_FAILED:\n            return {\n                ...state,\n                isGettingEntry: false,\n                getEntryError: action.payload,\n            };\n    \tcase POST_ENTRY_REQUEST:\n            return {\n                ...state,\n                isPostingEntry: true,\n                postEntryError: null,\n            };\n    \tcase POST_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isPostingEntry: false,\n                postEntryResp: action.payload,\n            };\n    \tcase POST_ENTRY_FAILED:\n            return {\n                ...state,\n                isPostingEntry: false,\n                postEntryError: action.payload,\n            };\n    \tcase DELETE_ENTRY_REQUEST:\n            return {\n                ...state,\n                isDeletingEntry: true,\n                deleteEntryError: null,\n            };\n    \tcase DELETE_ENTRY_SUCCESS:\n            return {\n                ...state,\n                isDeletingEntry: false,\n                deleteEntryResp: action.payload,\n            };\n    \tcase DELETE_ENTRY_FAILED: \n            return {\n                ...state,\n                isDeletingEntry: false,\n                deleteEntryError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { GET_COURSE_REQUEST, GET_COURSE_SUCCESS, GET_COURSE_FAILED, POST_COURSE_REQUEST, POST_COURSE_SUCCESS, POST_COURSE_FAILED, PUT_COURSE_REQUEST, PUT_COURSE_SUCCESS, PUT_COURSE_FAILED, DELETE_COURSE_REQUEST, DELETE_COURSE_SUCCESS, DELETE_COURSE_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingCourse: false,\n\tgetCourseResp: null,\n\tgetCourseError: null,\n\n\tisPostingCourse: false,\n\tpostCourseResp: null,\n\tpostCourseError: null,\n\n    isPuttingCourse: false,\n    putCourseResp: null,\n    putCourseError: null,\n\n\tisDeletingCourse: false,\n\tdeleteCourseResp: null,\n\tdeleteCourseErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_COURSE_REQUEST:\n            return {\n                ...state,\n                isGettingCourse: true,\n                getCourseError: null,\n            };\n    \tcase GET_COURSE_SUCCESS:\n            return {\n                ...state,\n                isGettingCourse: false,\n                getCourseResp: action.payload,\n            };\n    \tcase GET_COURSE_FAILED:\n            return {\n                ...state,\n                isGettingCourse: false,\n                getCourseError: action.payload,\n            };\n    \tcase POST_COURSE_REQUEST:\n            return {\n                ...state,\n                isPostingCourse: true,\n                postCourseError: null,\n            };\n    \tcase POST_COURSE_SUCCESS:\n            return {\n                ...state,\n                isPostingCourse: false,\n                postCourseResp: action.payload,\n            };\n    \tcase POST_COURSE_FAILED:\n            return {\n                ...state,\n                isPostingCourse: false,\n                postCourseError: action.payload,\n            };\n\n        case PUT_COURSE_REQUEST:\n            return {\n                ...state,\n                isPuttingCourse: true,\n                putCourseError: null,\n            };\n        case PUT_COURSE_SUCCESS:\n            return {\n                ...state,\n                isPuttingCourse: false,\n                putCourseResp: action.payload,\n            };\n        case PUT_COURSE_FAILED:\n            return {\n                ...state,\n                isPuttingCourse: false,\n                putCourseError: action.payload,\n            };\n    \tcase DELETE_COURSE_REQUEST:\n            return {\n                ...state,\n                isDeletingCourse: true,\n                deleteCourseError: null,\n            };\n    \tcase DELETE_COURSE_SUCCESS:\n            return {\n                ...state,\n                isDeletingCourse: false,\n                deleteCourseResp: action.payload,\n            };\n    \tcase DELETE_COURSE_FAILED: \n            return {\n                ...state,\n                isDeletingCourse: false,\n                deleteCourseError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { GET_INSTRUCTOR_REQUEST, GET_INSTRUCTOR_SUCCESS, GET_INSTRUCTOR_FAILED, POST_INSTRUCTOR_REQUEST, POST_INSTRUCTOR_SUCCESS, POST_INSTRUCTOR_FAILED, PUT_INSTRUCTOR_REQUEST, PUT_INSTRUCTOR_SUCCESS, PUT_INSTRUCTOR_FAILED, DELETE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_SUCCESS, DELETE_INSTRUCTOR_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisGettingInstructor: false,\n\tgetInstructorResp: null,\n\tgetInstructorError: null,\n\n\tisPostingInstructor: false,\n\tpostInstructorResp: null,\n\tpostInstructorError: null,\n\n    isPuttingInstructor: false,\n    putInstructorResp: null,\n    putInstructorError: null,\n\n\tisDeletingInstructor: false,\n\tdeleteInstructorResp: null,\n\tdeleteInstructorErr: null\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase GET_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isGettingInstructor: true,\n                getInstructorError: null,\n            };\n    \tcase GET_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isGettingInstructor: false,\n                getInstructorResp: action.payload,\n            };\n    \tcase GET_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isGettingInstructor: false,\n                getInstructorError: action.payload,\n            };\n    \tcase POST_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isPostingInstructor: true,\n                postInstructorError: null,\n            };\n    \tcase POST_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isPostingInstructor: false,\n                postInstructorResp: action.payload,\n            };\n    \tcase POST_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isPostingInstructor: false,\n                postInstructorError: action.payload,\n            };\n\n        case PUT_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isPuttingInstructor: true,\n                putInstructorError: null,\n            };\n        case PUT_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isPuttingInstructor: false,\n                putInstructorResp: action.payload,\n            };\n        case PUT_INSTRUCTOR_FAILED:\n            return {\n                ...state,\n                isPuttingInstructor: false,\n                putInstructorError: action.payload,\n            };\n    \tcase DELETE_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                isDeletingInstructor: true,\n                deleteInstructorError: null,\n            };\n    \tcase DELETE_INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                isDeletingInstructor: false,\n                deleteInstructorResp: action.payload,\n            };\n    \tcase DELETE_INSTRUCTOR_FAILED: \n            return {\n                ...state,\n                isDeletingInstructor: false,\n                deleteInstructorError: action.paylod,\n            };\n        default:\n            return state;\n\t}\n}","import { MATCH_REQUEST, MATCH_SUCCESS, MATCH_FAILED } from '../constants/actionTypes';\n\nconst initialState = {\n\tisMatching: false,\n\tmatchResp: null,\n\tmatchError: null,\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n    \tcase MATCH_REQUEST:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatching: true,\n    \t\t\tmatchError: null,\n    \t\t}\n    \tcase MATCH_SUCCESS:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatching: false,\n    \t\t\tmatchResp: action.payload,\n    \t\t}\n    \tcase MATCH_FAILED:\n    \t\treturn {\n    \t\t\t...state,\n    \t\t\tisMatching: false,\n    \t\t\tmatchError: action.payload,\n    \t\t}\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\n\nimport authReducer from './authReducer.js';\nimport entryReducer from './entryReducer.js';\nimport courseReducer from './courseReducer.js';\nimport instructorReducer from './instructorReducer.js';\nimport matchReducer from './matchReducer.js';\n\nconst createRootReducer = (history) => combineReducers({\n\trouter: connectRouter(history),\n    auth: authReducer,\n    entryRequests: entryReducer,\n    courseRequests: courseReducer,\n    instructorRequests: instructorReducer,\n    match: matchReducer,\n});\n\nexport default createRootReducer","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAvRxCrKYBVXXeSHunaqcvOcvsIv4HPLc8\",\n    authDomain: \"course-6ab40.firebaseapp.com\",\n    databaseURL: \"https://course-6ab40.firebaseio.com\",\n    projectId: \"course-6ab40\",\n    storageBucket: \"course-6ab40.appspot.com\",\n    messagingSenderId: \"346684960816\",\n    appId: \"1:346684960816:web:fdd8ed2590afc1f9bd3df5\",\n    measurementId: \"G-0M3YZSGD24\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const firestore = firebase.firestore();","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, VERIFY_REQUEST, VERIFY_SUCCESS } from '../constants/actionTypes';\nimport { auth, provider } from \"../firebase\";\n\n// Actions\nconst loginRequest = () => {\n    return {\n        type: LOGIN_REQUEST,\n    }\n}\n\nconst loginSuccess = (res) => {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: res,\n    }\n}\n\nconst loginFailed = (err) => {\n    return {\n        type: LOGIN_FAILED,\n        payload: err,\n    }\n}\n\nconst logoutRequest = () => {\n    return {\n        type: LOGOUT_REQUEST,\n    }\n}\n\nconst logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n    }\n}\n\nconst logoutFailed = (err) => {\n    return {\n        type: LOGOUT_FAILED,\n        payload: err,\n    }\n}\n\nconst verifyRequest = () => {\n    return {\n        type: VERIFY_REQUEST,\n    };\n}\n\nconst verifySuccess = () => {\n    return {\n        type: VERIFY_SUCCESS,\n    };\n}\n\n// Thunk\nexport const login = (email, password) => dispatch => {\n    dispatch(loginRequest());\n\n    auth.signInWithEmailAndPassword(email, password).then(res => {\n        dispatch(loginSuccess(res.user));\n    }).catch(err => {\n        dispatch(loginFailed(err));\n    });\n};\n\nexport const loginWithGoogle = () => dispatch => {\n    dispatch(loginRequest());\n\n    auth.signInWithPopup(provider).then(res => {\n        dispatch(loginSuccess(res.user));\n    }).catch(err => {\n        dispatch(loginFailed(err));\n    });\n}\n\nexport const logout = () => dispatch => {\n    dispatch(logoutRequest());\n\n    auth.signOut().then(() => {\n        dispatch(logoutSuccess());\n    }).catch(err => {\n        dispatch(logoutFailed(err));\n    });\n};\n\nexport const verifyAuth = () => dispatch => {\n    dispatch(verifyRequest());\n\n    auth.onAuthStateChanged(user => {\n        if (user) {\n            dispatch(loginSuccess(user));\n        }\n\n        dispatch(verifySuccess());\n    });\n};","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport createRootReducer from './reducers';\nimport { verifyAuth } from \"./actions/authActions\";\n\nconst logger = createLogger({\n\tcollapsed: true\n});\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nexport default function configureStore(preloadedState) {\n\tconst store = createStore(\n\t    createRootReducer(history),\n\t    preloadedState,\n\t    compose(\n\t    \tapplyMiddleware(\n\t    \t\trouterMiddleware(history),\n\t    \t\tthunk,\n\t    \t\tlogger\n\t    \t)\n\t    )\n\t)\n\n\tstore.dispatch(verifyAuth());\n\treturn store\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\n\nconst ProtectedRoute = ({\n    component: Component,\n    isAuthenticated,\n    isVerifying,\n    ...params\n}) => (\n    <Route\n        {...params}\n        render={ props =>\n            isVerifying \n                ? <div /> \n                : isAuthenticated \n                    ? <Component {...props} /> \n                    : <Redirect to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}/>\n        }\n    />\n);\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport { Button, Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport './NavBar.scss';\n\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n\nclass NavBar extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: '',\n            password: '',\n        };\n    }\n\n    // Button Handlers\n    signoutButtonClickHandler = (event) => {\n        this.props.dispatch(logout());\n    }\n\n    // Render\n    render() {\n        return (\n            <Navbar bg=\"dark\" className=\"navbar\" expand=\"sm\" sticky=\"top\" variant=\"dark\">\n                <Navbar.Brand>\n                    <img className=\"d-inline-block align-top\" src={logo} alt=\"\" width=\"30\" height=\"30\"/>\n                    Course Assign\n                </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\n                    </Nav>\n\n                    <Navbar.Text className=\"text\">\n                        Signed In As: <Link to=\"/profile\">{this.props.auth.profile.email.substring(0, this.props.auth.profile.email.lastIndexOf(\"@\"))}</Link>\n                    </Navbar.Text>\n                    <Nav.Item>\n                        <Button variant=\"danger\" onClick={this.signoutButtonClickHandler}>Logout</Button>\n                    </Nav.Item>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);","import { BASE_URL, GET_ENTRY_REQUEST, GET_ENTRY_SUCCESS, GET_ENTRY_FAILED, POST_ENTRY_REQUEST, POST_ENTRY_SUCCESS, POST_ENTRY_FAILED, DELETE_ENTRY_REQUEST, DELETE_ENTRY_SUCCESS, DELETE_ENTRY_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst getEntryRequest = () => {\n    return {\n        type: GET_ENTRY_REQUEST,\n    }\n}\n\nconst getEntrySuccess = (res) => {\n    return {\n        type: GET_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getEntryFailed = (err) => {\n    return {\n        type: GET_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\nconst postEntryRequest = () => {\n    return {\n        type: POST_ENTRY_REQUEST,\n    }\n}\n\nconst postEntrySuccess = (res) => {\n    return {\n        type: POST_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postEntryFailed = (err) => {\n    return {\n        type: POST_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteEntryRequest = () => {\n    return {\n        type: DELETE_ENTRY_REQUEST,\n    }\n}\n\nconst deleteEntrySuccess = (res) => {\n    return {\n        type: DELETE_ENTRY_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteEntryFailed = (err) => {\n    return {\n        type: DELETE_ENTRY_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/courses'\nexport const getEntries = () => dispatch => new Promise((resolve, reject) => {\n\tdispatch(getEntryRequest());\n\n\tlet body = { \n\t\tcrossDomain: true \n\t};\n\n\taxios.get(\n\t\tBASE_URL + '/entries', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(getEntrySuccess(res.data.data));\n\t\tresolve(res.data.data);\n\t}).catch(err => {\n\t\tdispatch(getEntryFailed(err));\n\t\treject(err);\n\t});\n});\n\n// POST: '/entries'\nexport const createEntry = (courseNo, courseName, year, term, primaryInstructor, aPlus, a, aMinus, bPlus, b, bMinus, cPlus, c, cMinus, dPlus, d, dMinus, f) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(postEntryRequest());\n\n\tlet body = {\n\t\tcourseNo: courseNo,\n\t\tcourseName: courseName,\n\t\tyear: year,\n\t\tterm: term,\n\t\tprimaryInstructor: primaryInstructor,\n\t\taPlus: aPlus,\n\t\ta: a,\n\t\taMinus: aMinus,\n\t\tbPlus: bPlus,\n\t\tb: b,\n\t\tbMinus: bMinus,\n\t\tcPlus: cPlus,\n\t\tc: c,\n\t\tcMinus: cMinus,\n\t\tdPlus: dPlus,\n\t\td: d,\n\t\tdMinus: dMinus,\n\t\tf: f,\n\t\tcrossDomain: true\n\t};\n\n\taxios.post(\n\t\tBASE_URL + '/entries', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(postEntrySuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(postEntryFailed(err));\n\t\treject(err);\n\t});\n});\n\n// DELETE: '/entries/:courseNo/:courseName/:year/:term/:primaryInstructor'\nexport const deleteEntry = ( courseNo, courseName, year, term, primaryInstructor) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(deleteEntryRequest());\n\t\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.delete(\n\t\tBASE_URL + '/entries/' + courseNo + '/' + courseName + '/' + year + '/' + term + '/' + primaryInstructor, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(deleteEntrySuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(deleteEntryFailed(err));\n\t\treject(err);\n\t})\n});","import React from 'react';\nimport { Alert, Button, Col, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getEntries, createEntry } from '../../actions/entryActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        year: null,\n        term: null,\n        primaryInstructor: null,\n        aPlus: null,\n        a: null,\n        aMinus: null,\n        bPlus: null,\n        b: null,\n        bMinus: null,\n        cPlus: null,\n        c: null,\n        cMinus: null,\n        dPlus: null,\n        d: null,\n        dMinus: null,\n        f: null,\n    },\n}\n\nclass NewEntryModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Call\n        this.props.dispatch(createEntry(this.state.form.courseNo, this.state.form.courseName, this.state.form.year, this.state.form.term, this.state.form.primaryInstructor, this.state.form.aPlus, this.state.form.a, this.state.form.aMinus, this.state.form.bPlus, this.state.form.b, this.state.form.bMinus, this.state.form.cPlus, this.state.form.c, this.state.form.cMinus, this.state.form.dPlus, this.state.form.d, this.state.form.dMinus, this.state.form.f)).then(res => {\n            this.props.dispatch(getEntries()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Entry</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"courseNo\">\n                                <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"courseName\">\n                                <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"year\">\n                                <Form.Control required name=\"year\" onChange={this.textInput} placeholder=\"Year\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"term\">\n                                <Form.Control required name=\"term\" onChange={this.textInput} placeholder=\"Term\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"primaryInstructor\">\n                            <Form.Control required name=\"primaryInstructor\" onChange={this.textInput} placeholder=\"Primary Instructor\"/>\n                        </Form.Group>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"aPlus\">\n                                <Form.Control required name=\"aPlus\" onChange={this.textInput} placeholder=\"A+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"a\">\n                                <Form.Control required name=\"a\" onChange={this.textInput} placeholder=\"A\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"aMinus\">\n                                <Form.Control required name=\"aMinus\" onChange={this.textInput} placeholder=\"A-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"bPlus\">\n                                <Form.Control required name=\"bPlus\" onChange={this.textInput} placeholder=\"B+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"b\">\n                                <Form.Control required name=\"b\" onChange={this.textInput} placeholder=\"B\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"bMinus\">\n                                <Form.Control required name=\"bMinus\" onChange={this.textInput} placeholder=\"B-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"cPlus\">\n                                <Form.Control required name=\"cPlus\" onChange={this.textInput} placeholder=\"C+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"c\">\n                                <Form.Control required name=\"c\" onChange={this.textInput} placeholder=\"C\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"cMinus\">\n                                <Form.Control required name=\"cMinus\" onChange={this.textInput} placeholder=\"C-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dPlus\">\n                                <Form.Control required name=\"dPlus\" onChange={this.textInput} placeholder=\"D+\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"d\">\n                                <Form.Control required name=\"d\" onChange={this.textInput} placeholder=\"D\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dMinus\">\n                                <Form.Control required name=\"dMinus\" onChange={this.textInput} placeholder=\"D-\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"f\">\n                                <Form.Control required name=\"f\" onChange={this.textInput} placeholder=\"F\"/>\n                            </Form.Group>\n                        </Form.Row>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Entry</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewEntryModal);","import React from 'react';\nimport { Alert, Button, Col, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        year: null,\n        term: null,\n        primaryInstructor: null,\n    },\n}\n\nclass DeleteEntryModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Axios Request\n        /*deleteEntry(\n            this.state.form.courseNo,\n            this.state.form.courseName,\n            this.state.form.year,\n            this.state.form.term,\n            this.state.form.primaryInstructor\n        ).then(res => {\n            // Close Form\n            this.props.close();\n        }).catch(err => {\n            console.log(err);\n        });*/\n    }    \n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Entry</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"courseNo\">\n                                <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"courseName\">\n                                <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"year\">\n                                <Form.Control required name=\"year\" onChange={this.textInput} placeholder=\"Year\"/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"term\">\n                                <Form.Control required name=\"term\" onChange={this.textInput} placeholder=\"Term\"/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"primaryInstructor\">\n                            <Form.Control required name=\"primaryInstructor\" onChange={this.textInput} placeholder=\"Primary Instructor\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Entry</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default DeleteEntryModal;","import { BASE_URL, GET_COURSE_REQUEST, GET_COURSE_SUCCESS, GET_COURSE_FAILED, POST_COURSE_REQUEST, POST_COURSE_SUCCESS, POST_COURSE_FAILED, PUT_COURSE_REQUEST, PUT_COURSE_SUCCESS, PUT_COURSE_FAILED, DELETE_COURSE_REQUEST, DELETE_COURSE_SUCCESS, DELETE_COURSE_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst getCourseRequest = () => {\n    return {\n        type: GET_COURSE_REQUEST,\n    }\n}\n\nconst getCourseSuccess = (res) => {\n    return {\n        type: GET_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getCourseFailed = (err) => {\n    return {\n        type: GET_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst postCourseRequest = () => {\n    return {\n        type: POST_COURSE_REQUEST,\n    }\n}\n\nconst postCourseSuccess = (res) => {\n    return {\n        type: POST_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postCourseFailed = (err) => {\n    return {\n        type: POST_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst putCourseRequest = () => {\n    return {\n        type: PUT_COURSE_REQUEST,\n    }\n}\n\nconst putCourseSuccess = (res) => {\n    return {\n        type: PUT_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst putCourseFailed = (err) => {\n    return {\n        type: PUT_COURSE_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteCourseRequest = () => {\n    return {\n        type: DELETE_COURSE_REQUEST,\n    }\n}\n\nconst deleteCourseSuccess = (res) => {\n    return {\n        type: DELETE_COURSE_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteCourseFailed = (err) => {\n    return {\n        type: DELETE_COURSE_FAILED,\n        payload: err,\n    }\n}\n\n\n// Thunk\n// GET: '/courses'\nexport const getCourses = () => dispatch => new Promise((resolve, reject) => {\n\tdispatch(getCourseRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tBASE_URL + '/courses', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(getCourseSuccess(res.data.data));\n\t\tresolve(res.data.data);\n\t}).catch(err => {\n\t\tdispatch(getCourseFailed(err));\n\t\treject(err);\n\t});\n})\n\n\n// POST: '/courses'\nexport const createCourse = (courseNo, courseName, courseDesc) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(postCourseRequest());\n\n\tlet body = {\n\t\tcourseNo: courseNo,\n\t\tcourseName: courseName,\n\t\tcourseDesc: courseDesc,\n\t\tcrossDomain: true\n\t}\n\n\taxios.post(\n\t\tBASE_URL + '/courses', \n\t\tbody\n\t).then(res => {\n\t\tdispatch(postCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(postCourseFailed(err));\n\t\treject(err);\n\t});\n});\n\n// PUT: '/courses/:courseNo/:courseName'\nexport const updateCourse = (courseNo, courseName, courseDesc) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(putCourseRequest());\n\t\n\tlet body = {\n\t\tcourseDesc: courseDesc,\n\t\tcrossDomain: true\n\t}\n\n\taxios.put(\n\t\tBASE_URL + '/courses/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(putCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(putCourseFailed(err));\n\t\treject(err);\n\t});\n});\n\n// DELETE: '/courses/:courseNo/:courseName'\nexport const deleteCourse = (courseNo, courseName) => dispatch => new Promise((resolve, reject) => {\n\tdispatch(deleteCourseRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t}\n\n\taxios.delete(\n\t\tBASE_URL + '/courses/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(deleteCourseSuccess(res));\n\t\tresolve(res);\n\t}).catch(err => {\n\t\tdispatch(deleteCourseFailed(err));\n\t\treject(err);\n\t});\n});","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, createCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        courseDesc: null,\n    },\n}\n\nclass NewCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(createCourse(this.state.form.courseNo, this.state.form.courseName, this.state.form.courseDesc)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New/Update Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"courseNo\">\n                            <Form.Control required name=\"courseNo\" onChange={this.textInput} placeholder=\"Course Number\"/>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control required name=\"courseName\" onChange={this.textInput} placeholder=\"Course Name\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"courseDesc\">\n                            <Form.Control required as=\"textarea\" rows=\"5\" name=\"courseDesc\" onChange={this.textInput} placeholder=\"Course Description\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewCourseModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, updateCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n        courseDesc: null,\n    },\n}\n\nclass UpdateCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(updateCourse(this.state.form.courseNo, this.state.form.courseName, this.state.form.courseDesc)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                       <Form.Group controlId=\"courseNo\">\n                            <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                <option value={null}>---course no---</option>\n                                { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---course name---</option>\n                                { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"courseDesc\">\n                            <Form.Control required as=\"textarea\" rows=\"5\" name=\"courseDesc\" onChange={this.textInput} placeholder=\"Course Description\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Update Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(UpdateCourseModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getCourses, deleteCourse } from '../../actions/courseActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        courseNo: null,\n        courseName: null,\n    },\n}\n\nclass DeleteCourseModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Select\n    handleNumberSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseNo: parseInt(e.target.value),\n            }\n        });\n    }\n\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                courseName: e.target.value,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for(const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Axios Request\n        this.props.dispatch(deleteCourse(this.state.form.courseNo, this.state.form.courseName)).then(res => {\n            this.props.dispatch(getCourses()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        let courseMap = {};\n        if (this.props.courses) {\n            this.props.courses.forEach(course => {\n                if (!courseMap.hasOwnProperty(course.courseNo)) {\n                    courseMap[course.courseNo] = [];\n                }\n\n                courseMap[course.courseNo].push(course.courseName);\n            });\n        }\n\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Course</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"courseNo\">\n                            <Form.Control as=\"select\" onChange={this.handleNumberSelect} custom>\n                                <option value={null}>---course no---</option>\n                                { Object.keys(courseMap).map((courseNo, i) => <option key={courseNo + courseMap[courseNo]} value={courseNo}>{courseNo}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"courseName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---course name---</option>\n                                { courseMap[this.state.form.courseNo] && courseMap[this.state.form.courseNo].map((courseName, i) => <option key={this.state.form.courseNo + courseName} value={courseName}>{courseName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Course</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteCourseModal);","import { BASE_URL, GET_INSTRUCTOR_REQUEST, GET_INSTRUCTOR_SUCCESS, GET_INSTRUCTOR_FAILED, POST_INSTRUCTOR_REQUEST, POST_INSTRUCTOR_SUCCESS, POST_INSTRUCTOR_FAILED, PUT_INSTRUCTOR_REQUEST, PUT_INSTRUCTOR_SUCCESS, PUT_INSTRUCTOR_FAILED, DELETE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_SUCCESS, DELETE_INSTRUCTOR_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst getInstructorRequest = () => {\n    return {\n        type: GET_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst getInstructorSuccess = (res) => {\n    return {\n        type: GET_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst getInstructorFailed = (err) => {\n    return {\n        type: GET_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst postInstructorRequest = () => {\n    return {\n        type: POST_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst postInstructorSuccess = (res) => {\n    return {\n        type: POST_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst postInstructorFailed = (err) => {\n    return {\n        type: POST_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst putInstructorRequest = () => {\n    return {\n        type: PUT_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst putInstructorSuccess = (res) => {\n    return {\n        type: PUT_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst putInstructorFailed = (err) => {\n    return {\n        type: PUT_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\nconst deleteInstructorRequest = () => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST,\n    }\n}\n\nconst deleteInstructorSuccess = (res) => {\n    return {\n        type: DELETE_INSTRUCTOR_SUCCESS,\n        payload: res,\n    }\n}\n\nconst deleteInstructorFailed = (err) => {\n    return {\n        type: DELETE_INSTRUCTOR_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/instructors'\nexport const getInstructors = () => dispatch => new Promise((resolve, reject) => {\n    dispatch(getInstructorRequest());\n\n    let body = {\n        crossDomain: true\n    };\n\n    axios.get(\n        BASE_URL + '/instructors', \n        body\n    ).then(res => {\n        dispatch(getInstructorSuccess(res.data.data));\n        resolve(res.data.data);\n    }).catch(err => {\n        dispatch(getInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// POST: '/instructors'\nexport const createInstructor = (instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(postInstructorRequest());\n\n    let body = {\n        instructorName: instructorName,\n        researchInterests: researchInterests,\n        crossDomain: true\n    }\n\n    axios.post(\n        BASE_URL + '/instructors', \n        body\n    ).then(res => {\n        dispatch(postInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(postInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// PUT: '/instructors/:instructorId'\nexport const updateInstructor = (instructorId, instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(putInstructorRequest());\n    \n    let body = {\n        instructorName: instructorName,\n        researchInterests: researchInterests,\n        crossDomain: true\n    }\n\n    axios.put(\n        BASE_URL + '/instructors/' + instructorId,\n        body\n    ).then(res => {\n        dispatch(putInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(putInstructorFailed(err));\n        reject(err);\n    });\n});\n\n// DELETE: '/courses/:courseNo/:courseName'\nexport const deleteInstructor = (instructorId, instructorName, researchInterests) => dispatch => new Promise((resolve, reject) => {\n    dispatch(deleteInstructorRequest());\n\n    let body = {\n        crossDomain: true\n    }\n\n    axios.delete(\n        BASE_URL + '/instructors/' + instructorId, \n        body\n    ).then(res => {\n        dispatch(deleteInstructorSuccess(res));\n        resolve(res);\n    }).catch(err => {\n        dispatch(deleteInstructorFailed(err));\n        reject(err);\n    });\n});","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, createInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorName: null,\n        researchInterests: null,\n    },\n}\n\nclass NewInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(createInstructor(this.state.form.instructorName, this.state.form.researchInterests)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control required name=\"instructorName\" onChange={this.textInput} placeholder=\"Instructor Name\"/>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"researchInterests\">\n                            <Form.Control required name=\"researchInterests\" onChange={this.textInput} placeholder=\"Research Interests\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>New Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(NewInstructorModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, updateInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorId: null,\n        instructorName: null,\n        researchInterests: null,\n    },\n}\n\nclass UpdateInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            form: {\n                ...this.state.form, \n                [e.target.name]: e.target.value.trim(),\n            },\n        });\n    }\n\n    // Select\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                instructorId: JSON.parse(e.target.value).instructorId,\n                instructorName: JSON.parse(e.target.value).instructorName,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(updateInstructor(this.state.form.instructorId, this.state.form.instructorName, this.state.form.researchInterests)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---instructor name---</option>\n                                { this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                            \n                        <Form.Group controlId=\"researchInterests\">\n                            <Form.Control required name=\"researchInterests\" onChange={this.textInput} placeholder=\"Research Interests\"/>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Update Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(UpdateInstructorModal);","import React from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport './Modal.scss';\n\nimport { connect } from 'react-redux';\nimport { getInstructors, deleteInstructor } from '../../actions/instructorActions';\n\nconst initialState = {\n    error: false,\n\n    form: {\n        instructorId: null,\n    },\n}\n\nclass DeleteInstructorModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = initialState;\n    }\n\n    // Select\n    handleNameSelect = (e) => {\n        this.setState({\n            ...this.state,\n            form: {\n                ...this.state.form,\n                instructorId: JSON.parse(e.target.value).instructorId,\n            }\n        });\n    }\n\n    // Save Changes To Database\n    submit = (e) => {\n        // Check All Fields Valid\n        for (const entry in this.state.form) {\n            if (!this.state.form[entry]) {\n                this.setState({ error: true });\n                return;\n            }\n        }\n        this.setState({ error: false });\n\n        // Redux Action\n        this.props.dispatch(deleteInstructor(this.state.form.instructorId)).then(res => {\n            this.props.dispatch(getInstructors()).then(res => {\n                this.props.close();\n            }).catch(err => {\n                console.log(err);\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    // Close Modal\n    close = () => {\n        this.setState(initialState);\n        this.props.close();\n    }\n\n    // Render\n    render() {\n        return (\n            <Modal size=\"lg\" show={this.props.visibility} onHide={this.close}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Instructor</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"instructorName\">\n                            <Form.Control as=\"select\" onChange={this.handleNameSelect} custom>\n                                <option value={null}>---instructor name---</option>\n                                { this.props.instructors && this.props.instructors.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>) }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n\n                    { this.state.error && <Alert variant=\"danger\">All fields are required!</Alert> }\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.close}>Close</Button>\n                    <Button variant=\"primary\" onClick={this.submit}>Delete Instructor</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n};\n\nexport default connect()(DeleteInstructorModal);","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport './CardList.scss';\n\nconst CardList = (props) => {\n    return (\n        <OverlayTrigger placement=\"left\" overlay={\n            <Tooltip>\n                Filter: {props.filter ? props.filter.charAt(0).toUpperCase() + props.filter.slice(1) : \"Null\"}<br/>Selection: {props.selection ? props.selection : \"Null\"}\n            </Tooltip>\n        }>\n            <div className=\"card-list\">\n                { props.filter === \"instructor\"\n                    ? props.data && props.data.map((course, i) => \n                        <Card key={course.courseName + i}>\n                            <Card.Title>CS{course.courseNo}: {course.courseName}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">Relevancy Score: {course.score}</Card.Subtitle>\n                            <Card.Text>{course.courseDesc}</Card.Text>\n                        </Card>\n                    ): props.filter === \"course\"\n                            ? props.data && props.data.map((instructor, i) => \n                                <Card key={instructor.instructorId + i}>\n                                    <Card.Title>{instructor.instructorName}</Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">Relevancy Score: {instructor.score}</Card.Subtitle>\n                                    <Card.Text>{instructor.researchInterests}</Card.Text>\n                                </Card>\n                            ): null\n\n                }\n            </div>\n        </OverlayTrigger>\n    );\n}\n\nexport default CardList;","import React from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport './LoadingButton.scss';\n\nconst LoadingButton = (props) => {\n    return (\n\t\t<Button {...props} disabled>\n\t\t\t<Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\n\t\t\tLoading...\n\t\t</Button>\n    );\n}\n\nexport default LoadingButton;","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = (props) => {\n    return (\n        <div className=\"spinner\">\n            <Spinner {...props}/>\n        </div>\n    );\n}\n\nexport default LoadingSpinner;","import { BASE_URL, MATCH_REQUEST, MATCH_SUCCESS, MATCH_FAILED } from '../constants/actionTypes';\nimport axios from 'axios';\n\n// Actions\nconst matchRequest = () => {\n    return {\n        type: MATCH_REQUEST,\n    }\n}\n\nconst matchSuccess = (res) => {\n    return {\n        type: MATCH_SUCCESS,\n        payload: res,\n    }\n}\n\nconst matchFailed = (err) => {\n    return {\n        type: MATCH_FAILED,\n        payload: err,\n    }\n}\n\n// Thunk\n// GET: '/matches/course/:courseNo/:courseName''\nexport const matchInstructorsToCourse = (courseNo, courseName) => dispatch => {\n\tdispatch(matchRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tBASE_URL + '/matches/course/' + courseNo + '/' + courseName, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(matchSuccess(res.data.data));\n\t}).catch(err => {\n\t\tdispatch(matchFailed(err));\n\t});\n}\n\n// GET: '/matches/instructor/<instructorId>'\nexport const matchCoursesToInstructor = (instructorId) => dispatch => {\n\tdispatch(matchRequest());\n\n\tlet body = {\n\t\tcrossDomain: true\n\t};\n\n\taxios.get(\n\t\tBASE_URL + '/matches/instructor/' + instructorId, \n\t\tbody\n\t).then(res => {\n\t\tdispatch(matchSuccess(res.data.data));\n\t}).catch(err => {\n\t\tdispatch(matchFailed(err));\n\t});\n}","import React from 'react';\nimport { Accordion, Card, Button, Col, Form, InputGroup, ListGroup } from 'react-bootstrap';\nimport NavBar from './NavBar';\nimport NewEntryModal from './modals/NewEntryModal';\nimport DeleteEntryModal from './modals/DeleteEntryModal';\nimport NewCourseModal from './modals/NewCourseModal';\nimport UpdateCourseModal from './modals/UpdateCourseModal';\nimport DeleteCourseModal from './modals/DeleteCourseModal';\nimport NewInstructorModal from './modals/NewInstructorModal';\nimport UpdateInstructorModal from './modals/UpdateInstructorModal';\nimport DeleteInstructorModal from './modals/DeleteInstructorModal';\nimport CardList from '../components/CardList';\nimport LoadingButton from '../components/LoadingButton';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport './HomeView.scss';\n\nimport { connect } from 'react-redux';\nimport { getEntries } from '../actions/entryActions';\nimport { getCourses } from '../actions/courseActions';\nimport { getInstructors } from '../actions/instructorActions';\nimport { matchInstructorsToCourse, matchCoursesToInstructor } from '../actions/matchActions';\n\nclass HomeView extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            showNewEntryModal: false,\n            showDeleteEntryModal: false,\n\n            showNewCourseModal: false,\n            showUpdateCourseModal: false,\n            showDeleteCourseModal: false,\n\n            showNewInstructorModal: false,\n            showUpdateInstructorModal: false,\n            showDeleteInstructorModal: false,\n\n            filter: null,\n            selection: null,\n\n            responseFilter: null,\n            responseSelection: null,\n        };\n    }\n\n    // Lifecycle Methods\n    componentDidMount() {\n        this.refreshData()\n    }\n    \n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    // Refresh Data Every Sixty Seconds\n    refreshData = () => {\n        Promise.all([\n            this.props.dispatch(getEntries()),\n            this.props.dispatch(getCourses()),\n            this.props.dispatch(getInstructors())\n        ]).then(res => {\n            this.timer = setTimeout(this.refreshData, 60000);\n        }).catch(err => {});\n    }\n\n    // Modals\n    openNewEntryModal = () => { this.setState({ showNewEntryModal: true }); };\n    closeNewEntryModal = () => { this.setState({ showNewEntryModal: false }); };\n\n    openDeleteEntryModal = () => { this.setState({ showDeleteEntryModal: true }); };\n    closeDeleteEntryModal = () => { this.setState({ showDeleteEntryModal: false }); };\n\n    openNewCourseModal = () => { this.setState({ showNewCourseModal: true }); };\n    closeNewCourseModal = () => { this.setState({ showNewCourseModal: false }); };\n\n    openUpdateCourseModal = () => { this.setState({ showUpdateCourseModal: true }); };\n    closeUpdateCourseModal = () => { this.setState({ showUpdateCourseModal: false }); };\n\n    openDeleteCourseModal = () => { this.setState({ showDeleteCourseModal: true }); };\n    closeDeleteCourseModal = () => { this.setState({ showDeleteCourseModal: false }); };\n\n    openNewInstructorModal = () => { this.setState({ showNewInstructorModal: true }); };\n    closeNewInstructorModal = () => { this.setState({ showNewInstructorModal: false }); };\n\n    openUpdateInstructorModal = () => { this.setState({ showUpdateInstructorModal: true }); };\n    closeUpdateInstructorModal = () => { this.setState({ showUpdateInstructorModal: false }); };\n\n    openDeleteInstructorModal = () => { this.setState({ showDeleteInstructorModal: true }); };\n    closeDeleteInstructorModal = () => { this.setState({ showDeleteInstructorModal: false }); };\n\n    // Open Current Version\n    findEntries = () => {\n        this.props.dispatch(getEntries()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {});\n    }\n\n    findCourses = () => {\n        this.props.dispatch(getCourses()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {});\n    }\n\n    findInstructors = () => {\n        this.props.dispatch(getInstructors()).then(res => {\n            let doc = window.open('data:application/json,');\n            doc.document.open();\n            doc.document.write('<html><body><pre>' + JSON.stringify(res, null, 4) + '</pre></body></html>');\n            doc.document.close();\n        }).catch(err => {});\n    }\n\n    // Select Menu\n    handleFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n            selection: null,\n        });\n    }\n\n    handleDropdown = (e) => {\n        this.setState({\n            selection: e.target.value\n        });\n    }\n\n    search = (e) => {\n        // TODO: API\n        if (this.state.filter === \"instructor\") {\n            if (this.state.selection) {\n                this.setState({\n                    responseFilter: this.state.filter,\n                    responseSelection: this.state.selection\n                });\n\n                this.props.dispatch(matchCoursesToInstructor(JSON.parse(this.state.selection).instructorId));\n            }\n        } else if (this.state.filter === \"course\") {\n            if (this.state.selection) {\n                this.setState({\n                    responseFilter: this.state.filter,\n                    responseSelection: this.state.selection\n                });\n\n                this.props.dispatch(matchInstructorsToCourse(JSON.parse(this.state.selection).courseNo, JSON.parse(this.state.selection).courseName));\n            }\n        } else {\n            this.setState({\n                responseFilter: null,\n                responseSelection: null\n            });\n        }\n    }\n\n    // Render\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar history={this.props.history}/>\n                <div className=\"home-screen\">\n                    <div className=\"left\">\n                        <NewEntryModal visibility={this.state.showNewEntryModal} close={this.closeNewEntryModal}/>\n                        <DeleteEntryModal visibility={this.state.showDeleteEntryModal} close={this.closeDeleteEntryModal}/>\n                        <NewCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showNewCourseModal} close={this.closeNewCourseModal}/>\n                        <UpdateCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showUpdateCourseModal} close={this.closeUpdateCourseModal}/>\n                        <DeleteCourseModal courses={this.props.courseRequests.getCourseResp} visibility={this.state.showDeleteCourseModal} close={this.closeDeleteCourseModal}/>\n                        <NewInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showNewInstructorModal} close={this.closeNewInstructorModal}/>\n                        <UpdateInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showUpdateInstructorModal} close={this.closeUpdateInstructorModal}/>\n                        <DeleteInstructorModal instructors={this.props.instructorRequests.getInstructorResp} visibility={this.state.showDeleteInstructorModal} close={this.closeDeleteInstructorModal}/>\n\n                        <Accordion defaultActiveKey=\"-1\">\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <span>Entry Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewEntryModal}>New Entry</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteEntryModal}>Delete Entry</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                    <span>Course Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewCourseModal}>New Course</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openUpdateCourseModal}>Update Course</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteCourseModal}>Delete Course</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                    <span>Instructor Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"2\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openNewInstructorModal}>New Instructor</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openUpdateInstructorModal}>Update Instructor</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.openDeleteInstructorModal}>Delete Instructor</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                    <span>Dataset Operations</span>\n                                    <span>&#9660;</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"3\">\n                                    <ListGroup className=\"list\" variant=\"flush\">\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findEntries}>Find Entries</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findCourses}>Find Courses</ListGroup.Item>\n                                        <ListGroup.Item action className=\"list-item\" onClick={this.findInstructors}>Find Instructors</ListGroup.Item>\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"content\">\n                            <Form>\n                                <Form.Row>\n                                    <Form.Group as={Col} md=\"3\" controlId=\"\">\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text id=\"inputGroupPrepend\">Filter:</InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control as=\"select\" onChange={this.handleFilter} custom>\n                                                <option value={null}></option>\n                                                <option value=\"instructor\">Instructor</option>\n                                                <option value=\"course\">Course</option>\n                                            </Form.Control>\n                                        </InputGroup>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} md=\"7\" controlId=\"\">\n                                        <Form.Control as=\"select\" onChange={this.handleDropdown} custom>\n                                            <option value={null}></option>\n                                            { this.state.filter === \"instructor\"\n                                                ? this.props.instructorRequests.getInstructorResp && this.props.instructorRequests.getInstructorResp.map((instructor, i) => <option key={instructor.instructorId} value={JSON.stringify(instructor)}>{instructor.instructorName}</option>)\n                                                : this.state.filter === \"course\"\n                                                    ? this.props.courseRequests.getCourseResp && this.props.courseRequests.getCourseResp.map((course, i) => <option key={course.courseNo + course.courseName} value={JSON.stringify(course)}>{'CS ' + course.courseNo + ': ' + course.courseName}</option>)\n                                                    : null\n                                            }\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} md=\"2\" controlId=\"\">\n                                        { this.props.match.isMatching \n                                            ? <LoadingButton block onClick={this.search} variant=\"light\"/>\n                                            : <Button block onClick={this.search} variant=\"light\">Search</Button>\n                                        }\n                                    </Form.Group>\n                                </Form.Row>\n                            </Form>\n\n                            { this.props.match.isMatching \n                                ? <LoadingSpinner animation=\"border\" role=\"status\"/>\n                                : <CardList filter={this.state.responseFilter} selection={ this.state.responseFilter === \"instructor\" ? JSON.parse(this.state.responseSelection).instructorName : this.state.responseFilter === \"course\" ? JSON.parse(this.state.responseSelection).courseName : null} data={this.props.match.matchResp}/>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    };\n};\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n        entryRequests: store.entryRequests,\n        courseRequests: store.courseRequests,\n        instructorRequests: store.instructorRequests,\n        match: store.match,\n    }\n}\n\nexport default connect(mapStateToProps)(HomeView);","import React, { Component } from 'react';\nimport { Redirect } from \"react-router\";\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport background from '../assets/background.jpg';\nimport './LoginView.scss';\n\nimport { connect } from 'react-redux';\nimport { login, loginWithGoogle } from '../actions/authActions';\n\nclass LoginView extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }\n\n    // Form Input\n    textInput = (e) => {\n        this.setState({ \n            ...this.state,\n            [e.target.name]: e.target.value.trim(),\n        });\n    }\n\n    // Button Handlers\n    signInButtonClickHandler = (e) => {\n        this.props.dispatch(login(this.state.email, this.state.password))\n    }\n\n    googleSignInButtonClickHandler = (e) => {\n        this.props.dispatch(loginWithGoogle());\n    }\n\n    registerButtonClickHandler = (e) => {\n        // TODO:\n        alert(\"Registration is currently disabled. Please sign-in through Google.\")\n    }\n\n    // Render\n    render() {\n        if (this.props.auth.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        } else { \n            return (\n                <div className=\"login\">\n                    <div className=\"left\">\n                        <img className=\"background\" alt='' src={background} />\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"header\">\n                            <h1 className=\"brand\">Course Assign</h1>\n                        </div>\n\n                        <Form className=\"form\">\n                            { this.props.auth.loginError && <Alert variant=\"danger\">Invalid email/password combination!</Alert> }\n                            \n                            <Form.Group controlId=\"email\">\n                                <Form.Control required name=\"email\" onChange={this.textInput} placeholder='Email'/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"password\">\n                                <Form.Control type=\"password\" name=\"password\" onChange={this.textInput} placeholder='Password'/>\n                            </Form.Group>\n\n                            <Button block className=\"signin-button\" onClick={this.signInButtonClickHandler}>Sign In</Button>\n\n                            <Button block className=\"signin-button\" onClick={this.googleSignInButtonClickHandler}>Sign In With Google</Button>\n\n                            <Button block className=\"register-button\" onClick={this.registerButtonClickHandler}>Register</Button>\n                        </Form>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        auth: store.auth,\n    }\n}\n\nexport default connect(mapStateToProps)(LoginView);","import React from 'react';\nimport { Route, Switch } from 'react-router'\nimport { connect } from 'react-redux';\nimport './App.scss';\n\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport HomeView from './containers/HomeView';\nimport LoginView from './containers/LoginView';\n\nfunction AppRoutes(props) {\n    return (\n        <Switch>\n            <Route exact path=\"/login\" component={LoginView} />\n            <ProtectedRoute exact path=\"/\" component={HomeView} isAuthenticated={props.isAuthenticated} isVerifying={props.isVerifying}/>\n        </Switch>\n    );\n};\n\nfunction mapStateToProps(store) {\n    return {\n        isAuthenticated: store.auth.isAuthenticated,\n        isVerifying: store.auth.isVerifying,\n    };\n};\n\nexport default connect(mapStateToProps)(AppRoutes);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store';\nimport './App.scss';\n\nimport AppRoutes from \"./AppRoutes\";\n\nconst store = configureStore();\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <AppRoutes/>\n            </ConnectedRouter>\n        </Provider>\n    );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.23c73952.jpg\";"],"sourceRoot":""}